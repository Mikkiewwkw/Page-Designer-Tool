{"ast":null,"code":"var _jsxFileName = \"/Users/kaiweiwu/Documents/page_designer/page-designer/src/FundSelection.js\";\nimport React from \"react\"; // import Ordering from \"./Ordering\";\n\nimport Sortable from 'react-sortablejs';\nimport uniqueId from 'lodash/uniqueId';\nimport 'string'; // import Sortable from 'sortablejs';\n// class FundSelection extends React.Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       optionList: [{ name: \"apples\", isChecked: false }, { name: \"Banana\", isChecked: false }, { name: \"orange\", isChecked: false }],\n//       optionsChecked: []\n//     }\n//   }\n//\n//   onAddingOption = (option) => {\n//     const isChecked = option.target.checked;\n//     const value = option.target.value;\n//\n//     this.setState(prevState => ({ optionList: prevState.optionList.map(option => option.name === value ? { ...option, isChecked: isChecked } : option) }));\n//\n//     if (isChecked)\n//       this.setState(prevState => ({optionsChecked: [...prevState.optionsChecked, value] }));\n//     else {\n//       const newoptionsChecked = this.state.optionsChecked.filter(option => option !== value)\n//       this.setState({ optionsChecked: newoptionsChecked });\n//     }\n//   }\n//\n//\n//\n//   render() {\n//     const option_list = this.state.optionList.map((option, i) =>\n//       // const id = \"inlineCheckbox\" + i.toString();\n//       <label key={i+1} className=\"checkbox-inline\">\n//         <input type=\"checkbox\" value={option.name} checked={option.isChecked} onChange={this.onAddingOption} />{option.name}\n//       </label>\n//     );\n//     var order_list = this.state.optionsChecked.map((option, i) =>\n//     <li key={i+1} className=\"list-group-item\">\n//       {option}\n//     </li>\n//     );\n//\n//     return (\n//       <div>\n//         <div className=\"apperance\">\n//           <h4>Apperance</h4>\n//           <span className=\"help-block\" id=\"helpBlock\">Choose which funds are visible on the page</span>\n//           <div className=\"multi-selection-fund\">\n//             {option_list}\n//           </div>\n//           <br/>\n//           <div>\n//             <h4>Ordering</h4>\n//             <span className=\"help-block\" id=\"helpBlock\">Choose which order the funds are displayed on the page</span>\n//             <div id=\"simpleList\" className=\"list-group\">\n//               <Sortable\n//                 options={{animation:150}}\n//                 className=\"block-list\"\n//                 tag=\"ul\"\n//                 onChange={(options => {\n//                   this.setState({optionsChecked:options});\n//                 })}\n//               >\n//                 {order_list}\n//               </Sortable>\n//           </div>\n//           </div>\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n\nclass FundSelection extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: ['Apple', 'Banana', 'Cherry', 'Guava', 'Peach', 'Strawberry'],\n      itemschecked: []\n    };\n  }\n\n  render() {\n    const items = this.state.items.map(val => React.createElement(\"li\", {\n      key: uniqueId(),\n      \"data-id\": val,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, val));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Sortable, {\n      tag: \"ul\" // Defaults to \"div\"\n      ,\n      onChange: (order, sortable, evt) => {\n        this.setState({\n          items: order\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, items));\n  }\n\n}\n\nexport default FundSelection;","map":{"version":3,"sources":["/Users/kaiweiwu/Documents/page_designer/page-designer/src/FundSelection.js"],"names":["React","Sortable","uniqueId","FundSelection","Component","state","items","itemschecked","render","map","val","order","sortable","evt","setState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAO,QAAP,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAC1CC,KAD0C,GAClC;AACJC,MAAAA,KAAK,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,EAA8B,OAA9B,EAAuC,OAAvC,EAAgD,YAAhD,CADH;AAEJC,MAAAA,YAAY,EAAE;AAFV,KADkC;AAAA;;AAM1CC,EAAAA,MAAM,GAAG;AACL,UAAMF,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBG,GAAjB,CAAqBC,GAAG,IAAK;AAAI,MAAA,GAAG,EAAER,QAAQ,EAAjB;AAAqB,iBAASQ,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCA,GAApC,CAA7B,CAAd;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,GAAG,EAAC,IADR,CACa;AADb;AAEI,MAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,QAAR,EAAkBC,GAAlB,KAA0B;AAChC,aAAKC,QAAL,CAAc;AAAER,UAAAA,KAAK,EAAEK;AAAT,SAAd;AACH,OAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMKL,KANL,CADJ,CADJ;AAYH;;AArByC;;AAwB5C,eAAeH,aAAf","sourcesContent":["import React from \"react\";\n// import Ordering from \"./Ordering\";\nimport Sortable from 'react-sortablejs';\nimport uniqueId from 'lodash/uniqueId';\nimport 'string';\n// import Sortable from 'sortablejs';\n\n// class FundSelection extends React.Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       optionList: [{ name: \"apples\", isChecked: false }, { name: \"Banana\", isChecked: false }, { name: \"orange\", isChecked: false }],\n//       optionsChecked: []\n//     }\n//   }\n//\n//   onAddingOption = (option) => {\n//     const isChecked = option.target.checked;\n//     const value = option.target.value;\n//\n//     this.setState(prevState => ({ optionList: prevState.optionList.map(option => option.name === value ? { ...option, isChecked: isChecked } : option) }));\n//\n//     if (isChecked)\n//       this.setState(prevState => ({optionsChecked: [...prevState.optionsChecked, value] }));\n//     else {\n//       const newoptionsChecked = this.state.optionsChecked.filter(option => option !== value)\n//       this.setState({ optionsChecked: newoptionsChecked });\n//     }\n//   }\n//\n//\n//\n//   render() {\n//     const option_list = this.state.optionList.map((option, i) =>\n//       // const id = \"inlineCheckbox\" + i.toString();\n//       <label key={i+1} className=\"checkbox-inline\">\n//         <input type=\"checkbox\" value={option.name} checked={option.isChecked} onChange={this.onAddingOption} />{option.name}\n//       </label>\n//     );\n//     var order_list = this.state.optionsChecked.map((option, i) =>\n//     <li key={i+1} className=\"list-group-item\">\n//       {option}\n//     </li>\n//     );\n//\n//     return (\n//       <div>\n//         <div className=\"apperance\">\n//           <h4>Apperance</h4>\n//           <span className=\"help-block\" id=\"helpBlock\">Choose which funds are visible on the page</span>\n//           <div className=\"multi-selection-fund\">\n//             {option_list}\n//           </div>\n//           <br/>\n//           <div>\n//             <h4>Ordering</h4>\n//             <span className=\"help-block\" id=\"helpBlock\">Choose which order the funds are displayed on the page</span>\n//             <div id=\"simpleList\" className=\"list-group\">\n//               <Sortable\n//                 options={{animation:150}}\n//                 className=\"block-list\"\n//                 tag=\"ul\"\n//                 onChange={(options => {\n//                   this.setState({optionsChecked:options});\n//                 })}\n//               >\n//                 {order_list}\n//               </Sortable>\n//           </div>\n//           </div>\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n\n\nclass FundSelection extends React.Component {\n  state = {\n      items: ['Apple', 'Banana', 'Cherry', 'Guava', 'Peach', 'Strawberry'],\n      itemschecked :[]\n  };\n\n  render() {\n      const items = this.state.items.map(val => (<li key={uniqueId()} data-id={val}>{val}</li>));\n\n      return (\n          <div>\n              <Sortable\n                  tag=\"ul\" // Defaults to \"div\"\n                  onChange={(order, sortable, evt) => {\n                      this.setState({ items: order });\n                  }}\n              >\n                  {items}\n              </Sortable>\n          </div>\n      );\n  }\n}\n\nexport default FundSelection;\n"]},"metadata":{},"sourceType":"module"}