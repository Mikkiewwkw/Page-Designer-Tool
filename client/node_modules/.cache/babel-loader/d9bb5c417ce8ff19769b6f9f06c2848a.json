{"ast":null,"code":"var _jsxFileName = \"/Users/kaiweiwu/Documents/page_designer/page-designer/src/Logo.js\";\nimport React from \"react\";\nimport uniqueId from 'lodash/uniqueId';\n\nvar AWS = require('aws-sdk');\n\nAWS.config.update({\n  accessKeyId: 'AKIAXKCRRSD3GJHJE65C',\n  secretAccessKey: '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',\n  region: 'us-west-2'\n});\nvar s3 = new AWS.S3();\nvar params = {\n  Bucket: 'max-client-logos'\n};\nvar allKeys = [];\nlistAllKeys();\n\nfunction listAllKeys() {\n  s3.listObjectsV2(params, (err, data) => {\n    if (err) {\n      console.log(err, err.stack);\n    } else {\n      var contents = data.Contents;\n      contents.forEach(function (content) {\n        allKeys.push(content.Key);\n      });\n\n      if (data.IsTruncated) {\n        params.ContinuationToken = data.NextContinuationToken;\n        console.log(\"There are more keys coming up\");\n        listAllKeys();\n      }\n    }\n  });\n  console.log(allKeys);\n}\n\nclass Logo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.getSignedURL = this.getSignedURL.bind(this);\n  }\n\n  getSignedURL(params) {\n    s3.getSignedUrl('getObject', params, function (err, url) {\n      console.log('Your generated pre-signed URL is', url);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"logo\",\n      class: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Logo\"), React.createElement(\"span\", {\n      className: \"help-block\",\n      id: \"helpBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Choose page logo\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/kaiweiwu/Documents/page_designer/page-designer/src/Logo.js"],"names":["React","uniqueId","AWS","require","config","update","accessKeyId","secretAccessKey","region","s3","S3","params","Bucket","allKeys","listAllKeys","listObjectsV2","err","data","console","log","stack","contents","Contents","forEach","content","push","Key","IsTruncated","ContinuationToken","NextContinuationToken","Logo","Component","constructor","props","state","getSignedURL","bind","getSignedUrl","url","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,IAAIC,GAAG,GAAGC,OAAO,CAAC,SAAD,CAAjB;;AACAD,GAAG,CAACE,MAAJ,CAAWC,MAAX,CAAkB;AAChBC,EAAAA,WAAW,EAAC,sBADI;AAEhBC,EAAAA,eAAe,EAAC,0CAFA;AAGhBC,EAAAA,MAAM,EAAC;AAHS,CAAlB;AAKA,IAAIC,EAAE,GAAG,IAAIP,GAAG,CAACQ,EAAR,EAAT;AACA,IAAIC,MAAM,GAAG;AAACC,EAAAA,MAAM,EAAE;AAAT,CAAb;AAEA,IAAIC,OAAO,GAAG,EAAd;AACAC,WAAW;;AACX,SAASA,WAAT,GAAsB;AACpBL,EAAAA,EAAE,CAACM,aAAH,CAAiBJ,MAAjB,EAAyB,CAACK,GAAD,EAAMC,IAAN,KAAe;AACtC,QAAID,GAAJ,EAAS;AACPE,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAAgBA,GAAG,CAACI,KAApB;AACD,KAFD,MAGI;AACF,UAAIC,QAAQ,GAAGJ,IAAI,CAACK,QAApB;AACAD,MAAAA,QAAQ,CAACE,OAAT,CAAiB,UAAUC,OAAV,EAAmB;AAChCX,QAAAA,OAAO,CAACY,IAAR,CAAaD,OAAO,CAACE,GAArB;AACH,OAFD;;AAIA,UAAIT,IAAI,CAACU,WAAT,EAAsB;AAClBhB,QAAAA,MAAM,CAACiB,iBAAP,GAA2BX,IAAI,CAACY,qBAAhC;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAL,QAAAA,WAAW;AACd;AACF;AACF,GAhBD;AAiBAI,EAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACD;;AAED,MAAMiB,IAAN,SAAmB9B,KAAK,CAAC+B,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACxB,MAAD,EAAQ;AAClBF,IAAAA,EAAE,CAAC4B,YAAH,CAAgB,WAAhB,EAA6B1B,MAA7B,EAAqC,UAAUK,GAAV,EAAesB,GAAf,EAAoB;AACzDpB,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDmB,GAAhD;AACD,KAFC;AAGD;;AAEDC,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAe,MAAA,KAAK,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAM,MAAA,SAAS,EAAC,YAAhB;AAA6B,MAAA,EAAE,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADF;AAOD;;AAvBgC","sourcesContent":["import React from \"react\";\nimport uniqueId from 'lodash/uniqueId';\n\nvar AWS = require('aws-sdk');\nAWS.config.update({\n  accessKeyId:'AKIAXKCRRSD3GJHJE65C',\n  secretAccessKey:'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',\n  region:'us-west-2'\n})\nvar s3 = new AWS.S3();\nvar params = {Bucket: 'max-client-logos'\n};\nvar allKeys = [];\nlistAllKeys();\nfunction listAllKeys(){\n  s3.listObjectsV2(params, (err, data) => {\n    if (err) {\n      console.log(err,err.stack);\n    }\n    else{\n      var contents = data.Contents;\n      contents.forEach(function (content) {\n          allKeys.push(content.Key);\n      });\n\n      if (data.IsTruncated) {\n          params.ContinuationToken = data.NextContinuationToken;\n          console.log(\"There are more keys coming up\");\n          listAllKeys();\n      }\n    }\n  })\n  console.log(allKeys);\n}\n\nclass Logo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n    this.getSignedURL = this.getSignedURL.bind(this);\n  };\n\n  getSignedURL(params){\n    s3.getSignedUrl('getObject', params, function (err, url) {\n    console.log('Your generated pre-signed URL is', url);\n  });\n  }\n\n  render(){\n    return(\n      <div id=\"logo\" class=\"logo\">\n          <h3>Logo</h3>\n          <span className=\"help-block\" id=\"helpBlock\">Choose page logo</span>\n          <br/>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}