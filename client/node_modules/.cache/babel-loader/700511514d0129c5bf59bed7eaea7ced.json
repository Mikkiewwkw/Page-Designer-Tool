{"ast":null,"code":"var _jsxFileName = \"/Users/kaiweiwu/Documents/page_designer/page-designer/src/Logo.js\";\nimport React from \"react\";\nimport uniqueId from 'lodash/uniqueId';\nimport downloadS3 from './s3config.js'; // s3.getSignedUrl('getObject', params, function (err, url) {\n//     console.log('Your generated pre-signed URL is', url);\n// });\n\nvar AWS = require('aws-sdk');\n\nvar keys = [\"194/194-logo-black.png\", \"194/kitty.jpg\"];\nvar list = [];\nvar s3 = new AWS.S3({\n  accessKeyId: 'AKIAXKCRRSD3GJHJE65C',\n  secretAccessKey: '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',\n  region: 'us-west-2'\n});\nvar urlparams = {\n  Bucket: 'max-client-logos',\n  Key: keys[0]\n};\ns3.getSignedUrl('getObject', urlparams, function (err, url) {\n  list.push(url);\n  console.log('Your generated pre-signed URL is', url);\n});\nurlparams = {\n  Bucket: 'max-client-logos',\n  Key: keys[1]\n};\nvar hapi = s3.getSignedUrl('getObject', urlparams);\nlist.push(hapi);\n\nfunction createAllUrl(allkey) {\n  let allURL = [];\n  const length = allkey.length;\n  console.log(length);\n\n  for (let i = 0; i < length; i++) {\n    console.log(\"im a dog\");\n    let params = {\n      Bucket: \"max-client-logos\",\n      Key: allkey[i]\n    };\n    let url = s3.getSignedUrl('getObject', params);\n    allURL.push(url);\n  }\n\n  console.log(allURL);\n  return allURL;\n}\n\ncreateAllUrl(keys);\n\nclass Logo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = option => {\n      const value = option.target.value;\n      this.setState({\n        choice: value\n      });\n    };\n\n    this.createAllUrl = allkey => {\n      let allURL = [];\n      const length = allkey.length;\n      console.log(allkey.length);\n      console.log(allkey);\n      console.log(length);\n\n      for (let i = 0; i < length; i++) {\n        console.log(\"im a dog\");\n        let params = {\n          Bucket: this.props.bucketName,\n          key: allkey[i]\n        };\n        let url = s3.getSignedUrl('getObject', params);\n        allURL.push(url);\n      }\n\n      console.log(allURL);\n      return allURL;\n    };\n\n    this.state = {\n      choice: \"\" //Need to somehow set up the initial state so that the user can see the currewnt stage of the logo\n\n    };\n  }\n\n  render() {\n    const allkey = downloadS3(this.props.prefix, this.props.bucketName);\n    console.log(allkey);\n    console.log(Object.keys(allkey));\n    const allURL = allkey.map(key => s3.getSignedUrl('getObject', {\n      Bucket: this.props.bucketName,\n      Key: key\n    }));\n    console.log(allURL); // const allURL = createAllUrl(allkey);\n    // console.log(allURL);\n\n    const logoList = allURL.map(url => React.createElement(\"label\", {\n      className: \"radio-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      key: uniqueId(),\n      type: \"radio\",\n      name: \"inlineRadioOptions\",\n      value: url,\n      onChange: this.handleChnage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: url,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))));\n    return React.createElement(\"div\", {\n      id: \"logo\",\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Logo\"), React.createElement(\"span\", {\n      className: \"help-block\",\n      id: \"helpBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Choose page logo\"), React.createElement(\"div\", {\n      className: \"logo-options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, logoList), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Logo;","map":{"version":3,"sources":["/Users/kaiweiwu/Documents/page_designer/page-designer/src/Logo.js"],"names":["React","uniqueId","downloadS3","AWS","require","keys","list","s3","S3","accessKeyId","secretAccessKey","region","urlparams","Bucket","Key","getSignedUrl","err","url","push","console","log","hapi","createAllUrl","allkey","allURL","length","i","params","Logo","Component","constructor","props","handleChange","option","value","target","setState","choice","bucketName","key","state","render","prefix","Object","map","logoList","handleChnage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport uniqueId from 'lodash/uniqueId';\nimport downloadS3 from './s3config.js';\n\n// s3.getSignedUrl('getObject', params, function (err, url) {\n//     console.log('Your generated pre-signed URL is', url);\n// });\nvar AWS = require('aws-sdk');\nvar keys = [\"194/194-logo-black.png\",\"194/kitty.jpg\"]\nvar list = [];\nvar s3 = new AWS.S3({accessKeyId:'AKIAXKCRRSD3GJHJE65C', secretAccessKey:'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', region:'us-west-2'});\nvar urlparams = {Bucket: 'max-client-logos', Key: keys[0]};\ns3.getSignedUrl('getObject', urlparams, function (err, url) {\n  list.push(url);\n  console.log('Your generated pre-signed URL is', url);\n});\nurlparams = {Bucket: 'max-client-logos', Key: keys[1]}\nvar hapi = s3.getSignedUrl('getObject', urlparams);\nlist.push(hapi);\n\nfunction createAllUrl(allkey) {\n  let allURL = [];\n  const length = allkey.length;\n  console.log(length);\n  for (let i = 0; i < length; i++) {\n    console.log(\"im a dog\");\n    let params = {Bucket:\"max-client-logos\", Key:allkey[i]}\n    let url = s3.getSignedUrl('getObject', params)\n    allURL.push(url);\n  }\n  console.log(allURL);\n  return allURL;\n}\ncreateAllUrl(keys);\n\n\nclass Logo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      choice:\"\", //Need to somehow set up the initial state so that the user can see the currewnt stage of the logo\n    }\n  };\n\n  handleChange = (option) => {\n    const value = option.target.value;\n    this.setState({choice:value});\n  }\n\n  createAllUrl = (allkey) => {\n    let allURL = [];\n    const length = allkey.length;\n    console.log(allkey.length);\n    console.log(allkey);\n    console.log(length);\n    for (let i = 0; i < length; i++) {\n      console.log(\"im a dog\");\n      let params = {Bucket:this.props.bucketName, key:allkey[i]}\n      let url = s3.getSignedUrl('getObject', params)\n      allURL.push(url);\n    }\n    console.log(allURL);\n    return allURL;\n  }\n\n  render(){\n    const allkey = downloadS3(this.props.prefix,this.props.bucketName);\n    console.log(allkey);\n    console.log(Object.keys(allkey));\n    const allURL = allkey.map((key) => (\n      s3.getSignedUrl('getObject', {Bucket:this.props.bucketName, Key:key})\n    ))\n    console.log(allURL);\n    // const allURL = createAllUrl(allkey);\n    // console.log(allURL);\n    const logoList = allURL.map((url) =>\n    <label className=\"radio-inline\">\n      <input key={uniqueId()} type=\"radio\" name=\"inlineRadioOptions\" value={url} onChange={this.handleChnage}>\n        <img src={url} alt=\"\" />\n      </input>\n    </label>\n  );\n    return(\n      <div id=\"logo\" className=\"logo\">\n          <h3>Logo</h3>\n          <span className=\"help-block\" id=\"helpBlock\">Choose page logo</span>\n          <div className=\"logo-options\">\n            {logoList}\n          </div>\n          <br/>\n      </div>\n    );\n  }\n}\n\nexport default Logo;\n"]},"metadata":{},"sourceType":"module"}