{"ast":null,"code":"var _jsxFileName = \"/Users/kaiweiwu/Documents/page_designer/page-designer/src/Colors.js\";\nimport React from \"react\";\nimport uniqueId from \"lodash/uniqueId\";\nimport { SketchPicker } from \"react-color\"; // function generator() {\n//     document.getElementById(\"cp1\").colorpicker();\n// }\n//\n// generator();\n\nclass ColorpickerComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.colorpicker = () => {\n      document.getElementById(this.props.id).colorpicker();\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          value = _this$props.value,\n          className = _this$props.className,\n          title = _this$props.title,\n          handleChange = _this$props.handleChange;\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, title), React.createElement(\"div\", {\n      className: \"input-group colorpicker-component\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      defaultValue: value,\n      name: title,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"input-group-addon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nclass Colors extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeComplete = (color, event) => {\n      if (event.target.name === \"Background\") {\n        this.setState({\n          Background: color.hex\n        });\n      } else if (event.target.name === \"Header\") {\n        this.setState({\n          Header: color.hex\n        });\n      } else if (event.target.name === \"Selection Button\") {\n        this.setState({\n          SelectionButton: color.hex\n        });\n      } else {//do nothing\n      }\n    };\n\n    this.state = {\n      displayColorPicker: false,\n      Background: \"#fff\",\n      Header: \"#fff\",\n      SelectionButton: \"#fff\"\n    };\n  } //Can also use handleChange but that will change the state everytime we call on drag events\n\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"colors\",\n      className: \"colors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Colors\"), React.createElement(\"span\", {\n      className: \"help-block\",\n      id: \"helpBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Change the color of the page\"), React.createElement(ColorpickerComponent, {\n      className: \"background-color\",\n      value: this.state.Background,\n      title: \"Background\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Colors;","map":{"version":3,"sources":["/Users/kaiweiwu/Documents/page_designer/page-designer/src/Colors.js"],"names":["React","uniqueId","SketchPicker","ColorpickerComponent","Component","colorpicker","document","getElementById","props","id","render","value","className","title","handleChange","Colors","constructor","handleChangeComplete","color","event","target","name","setState","Background","hex","Header","SelectionButton","state","displayColorPicker"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport uniqueId from \"lodash/uniqueId\";\nimport { SketchPicker } from \"react-color\";\n\n// function generator() {\n//     document.getElementById(\"cp1\").colorpicker();\n// }\n//\n// generator();\n\nclass ColorpickerComponent extends React.Component {\n    colorpicker = () => {\n        document.getElementById(this.props.id).colorpicker();\n    };\n\n    render() {\n        const { value, className, title, handleChange } = this.props;\n        return (\n            <div className={className}>\n                <h5>{title}</h5>\n                <div className=\"input-group colorpicker-component\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        defaultValue={value}\n                        name={title}\n                        onChange={handleChange}\n                    />\n                    <span className=\"input-group-addon\">\n                        <i></i>\n                    </span>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Colors extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayColorPicker: false,\n            Background: \"#fff\",\n            Header: \"#fff\",\n            SelectionButton: \"#fff\"\n        };\n    }\n\n    //Can also use handleChange but that will change the state everytime we call on drag events\n    handleChangeComplete = (color, event) => {\n        if (event.target.name === \"Background\") {\n            this.setState({ Background: color.hex });\n        } else if (event.target.name === \"Header\") {\n            this.setState({ Header: color.hex });\n        } else if (event.target.name === \"Selection Button\") {\n            this.setState({ SelectionButton: color.hex });\n        } else {\n            //do nothing\n        }\n    };\n\n    render() {\n        return (\n            <div id=\"colors\" className=\"colors\">\n                <h4>Colors</h4>\n                <span className=\"help-block\" id=\"helpBlock\">\n                    Change the color of the page\n                </span>\n                <ColorpickerComponent\n                    className=\"background-color\"\n                    value={this.state.Background}\n                    title=\"Background\"\n                    onChange={this.handleChange}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Colors;\n"]},"metadata":{},"sourceType":"module"}