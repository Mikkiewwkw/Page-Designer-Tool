{"ast":null,"code":"import _objectSpread from \"/Users/kaiweiwu/Documents/page_designer/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/kaiweiwu/Documents/page_designer/client/src/Layout.js\";\nimport React from \"react\";\nimport uniqueId from \"lodash/uniqueId\";\n\nlet base64 = require(\"base-64\");\n\nlet url = \"https://test-api.mobileaxept.com/micro_service/page-properties\";\nlet username = \"spencer.grimes@mobileaxept.com\";\nlet password = \"Temp654321\";\nlet headers = {\n  Authorization: \"Basic \" + base64.encode(username + \":\" + password),\n  \"Content-Type\": \"application/json\"\n};\n\nclass RadioOption extends React.Component {\n  render() {\n    const _this$props = this.props,\n          id = _this$props.id,\n          className = _this$props.className,\n          optionName = _this$props.optionName,\n          isChecked = _this$props.isChecked,\n          value = _this$props.value,\n          onChange = _this$props.onChange;\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"optionsRadios\" + id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"optionsRadios\" + id,\n      type: \"radio\",\n      name: optionName,\n      value: value,\n      onChange: onChange,\n      checked: isChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), optionName)));\n  }\n\n}\n\nclass Layout extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.autoSaveOption = new_value => {\n      console.log(\"autosaved layoutOption\");\n      const client_code = this.props.clientCode;\n      const pageId = this.props.pageId;\n      const fileld = this.props.field;\n      let body = {\n        client_code: client_code,\n        page_id: pageId,\n        field: field,\n        new_value: new_value\n      };\n      fetch(url, {\n        method: \"POST\",\n        headers: headers,\n        mode: \"cors\",\n        body: JSON.stringify(body)\n      }).then(response => {\n        if (response.ok) {\n          console.log(response);\n          return response.json();\n        } else {\n          throw new Error(\"Something went wrong ...\");\n        }\n      }).then(data => {\n        console.log(data);\n      }).catch(error => console.log(error));\n    };\n\n    this.handleChange = option => {\n      const isChecked = option.target.checked; // console.log(isChecked);\n\n      const value = option.target.value;\n      console.log(value);\n      this.setState({\n        layoutChosen: value\n      });\n      this.setState(prevState => ({\n        layoutOptions: prevState.layoutOptions.map(option => option.value === value ? _objectSpread({}, option, {\n          isChecked: isChecked\n        }) : _objectSpread({}, option, {\n          isChecked: !isChecked\n        }))\n      }), function () {\n        console.log(\"amountFirst\", this.state.layoutOptions[0].isChecked);\n        console.log(\"fundSelectionFirst\", this.state.layoutOptions[1].isChecked);\n      });\n    };\n\n    this.state = {\n      layoutOptions: [{\n        className: \"fundSelectionFirst\",\n        name: \"Fund Seletion First\",\n        value: \"1\",\n        isChecked: false\n      }, {\n        className: \"amountFirst\",\n        name: \"Amount First\",\n        value: \"2\",\n        isChecked: false\n      }],\n      layoutChosen: \"\",\n      isLoading: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    const client_code = this.props.clientCode;\n    const pageId = this.props.pageId;\n    const field = this.props.field;\n    this.setState({\n      isLoading: true\n    });\n    let newUrl = url + \"?client_code=\" + client_code + \"&page_id=\" + pageId + \"&field=\" + field;\n    console.log(newUrl);\n    fetch(newUrl, {\n      method: \"GET\",\n      headers: headers,\n      mode: \"cors\"\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(\"Something went wrong ...\");\n      }\n    }).then(data => {\n      console.log(data.value);\n      console.log(typeof data.value);\n      this.setState(prevState => ({\n        layoutOptions: prevState.layoutOptions.map(option => option.value === data.value ? _objectSpread({}, option, {\n          isChecked: true\n        }) : option)\n      }), function () {\n        console.log(\"amountFirst\", this.state.layoutOptions[0].isChecked);\n        console.log(\"fundSelectionFirst\", this.state.layoutOptions[1].isChecked);\n        console.log(this.state.layoutOptions[0].value === data.value);\n      });\n      this.setState({\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.layoutOptions[0].isChecked !== true) {\n      let new_value = prevState.layoutOptions[0].value;\n      this.autoSaveOption(new_value);\n    } else if (prevState.layoutOptions[1].isChecked !== true) {\n      let new_value = prevState.layoutOptions[1].value;\n      this.autoSaveOption(new_value);\n    }\n  }\n\n  render() {\n    if (this.state.error) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, this.state.error.message);\n    }\n\n    if (this.state.isLoading) {\n      return React.createElement(\"div\", {\n        className: \"loader\",\n        id: \"loader-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Loading...\"));\n    }\n\n    const optionList = this.state.layoutOptions.map((option, i) => React.createElement(RadioOption, {\n      id: i,\n      key: uniqueId(),\n      className: option.className,\n      optionName: option.name,\n      value: option.value,\n      isChecked: option.isChecked,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      id: \"layout\",\n      className: \"layout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Layout\"), React.createElement(\"span\", {\n      className: \"help-block\",\n      id: \"helpBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Choose the page layout\"), optionList);\n  }\n\n}\n\nexport default Layout;","map":{"version":3,"sources":["/Users/kaiweiwu/Documents/page_designer/client/src/Layout.js"],"names":["React","uniqueId","base64","require","url","username","password","headers","Authorization","encode","RadioOption","Component","render","props","id","className","optionName","isChecked","value","onChange","Layout","constructor","autoSaveOption","new_value","console","log","client_code","clientCode","pageId","fileld","field","body","page_id","fetch","method","mode","JSON","stringify","then","response","ok","json","Error","data","catch","error","handleChange","option","target","checked","setState","layoutChosen","prevState","layoutOptions","map","state","name","isLoading","componentDidMount","newUrl","componentDidUpdate","prevProps","message","optionList","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AACA,IAAIC,GAAG,GAAG,gEAAV;AACA,IAAIC,QAAQ,GAAG,gCAAf;AACA,IAAIC,QAAQ,GAAG,YAAf;AACA,IAAIC,OAAO,GAAG;AACVC,EAAAA,aAAa,EAAE,WAAWN,MAAM,CAACO,MAAP,CAAcJ,QAAQ,GAAG,GAAX,GAAiBC,QAA/B,CADhB;AAEV,kBAAgB;AAFN,CAAd;;AAKA,MAAMI,WAAN,SAA0BV,KAAK,CAACW,SAAhC,CAA0C;AACtCC,EAAAA,MAAM,GAAG;AAAA,wBAQD,KAAKC,KARJ;AAAA,UAEDC,EAFC,eAEDA,EAFC;AAAA,UAGDC,SAHC,eAGDA,SAHC;AAAA,UAIDC,UAJC,eAIDA,UAJC;AAAA,UAKDC,SALC,eAKDA,SALC;AAAA,UAMDC,KANC,eAMDA,KANC;AAAA,UAODC,QAPC,eAODA,QAPC;AASL,WACI;AAAK,MAAA,SAAS,EAAEJ,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAE,kBAAkBD,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,EAAE,EAAE,kBAAkBA,EAD1B;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,IAAI,EAAEE,UAHV;AAII,MAAA,KAAK,EAAEE,KAJX;AAKI,MAAA,QAAQ,EAAEC,QALd;AAMI,MAAA,OAAO,EAAEF,SANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EASKD,UATL,CADJ,CADJ,CADJ;AAiBH;;AA3BqC;;AA8B1C,MAAMI,MAAN,SAAqBpB,KAAK,CAACW,SAA3B,CAAqC;AACjCU,EAAAA,WAAW,CAACR,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA0FnBS,cA1FmB,GA0FFC,SAAS,IAAI;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,YAAMC,WAAW,GAAG,KAAKb,KAAL,CAAWc,UAA/B;AACA,YAAMC,MAAM,GAAG,KAAKf,KAAL,CAAWe,MAA1B;AACA,YAAMC,MAAM,GAAG,KAAKhB,KAAL,CAAWiB,KAA1B;AACA,UAAIC,IAAI,GAAG;AACPL,QAAAA,WAAW,EAAEA,WADN;AAEPM,QAAAA,OAAO,EAAEJ,MAFF;AAGPE,QAAAA,KAAK,EAAEA,KAHA;AAIPP,QAAAA,SAAS,EAAEA;AAJJ,OAAX;AAOAU,MAAAA,KAAK,CAAC7B,GAAD,EAAM;AACP8B,QAAAA,MAAM,EAAE,MADD;AAEP3B,QAAAA,OAAO,EAAEA,OAFF;AAGP4B,QAAAA,IAAI,EAAE,MAHC;AAIPJ,QAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AAJC,OAAN,CAAL,CAMKO,IANL,CAMUC,QAAQ,IAAI;AACd,YAAIA,QAAQ,CAACC,EAAb,EAAiB;AACbhB,UAAAA,OAAO,CAACC,GAAR,CAAYc,QAAZ;AACA,iBAAOA,QAAQ,CAACE,IAAT,EAAP;AACH,SAHD,MAGO;AACH,gBAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACH;AACJ,OAbL,EAcKJ,IAdL,CAcUK,IAAI,IAAI;AACVnB,QAAAA,OAAO,CAACC,GAAR,CAAYkB,IAAZ;AACH,OAhBL,EAiBKC,KAjBL,CAiBWC,KAAK,IAAIrB,OAAO,CAACC,GAAR,CAAYoB,KAAZ,CAjBpB;AAkBH,KAxHkB;;AAAA,SA0HnBC,YA1HmB,GA0HJC,MAAM,IAAI;AACrB,YAAM9B,SAAS,GAAG8B,MAAM,CAACC,MAAP,CAAcC,OAAhC,CADqB,CAErB;;AACA,YAAM/B,KAAK,GAAG6B,MAAM,CAACC,MAAP,CAAc9B,KAA5B;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AAEA,WAAKgC,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAEjC;AAAhB,OAAd;AACA,WAAKgC,QAAL,CACIE,SAAS,KAAK;AACVC,QAAAA,aAAa,EAAED,SAAS,CAACC,aAAV,CAAwBC,GAAxB,CAA4BP,MAAM,IAC7CA,MAAM,CAAC7B,KAAP,KAAiBA,KAAjB,qBACW6B,MADX;AACmB9B,UAAAA,SAAS,EAAEA;AAD9B,+BAEW8B,MAFX;AAEmB9B,UAAAA,SAAS,EAAE,CAACA;AAF/B,UADW;AADL,OAAL,CADb,EAQI,YAAW;AACPO,QAAAA,OAAO,CAACC,GAAR,CACI,aADJ,EAEI,KAAK8B,KAAL,CAAWF,aAAX,CAAyB,CAAzB,EAA4BpC,SAFhC;AAIAO,QAAAA,OAAO,CAACC,GAAR,CACI,oBADJ,EAEI,KAAK8B,KAAL,CAAWF,aAAX,CAAyB,CAAzB,EAA4BpC,SAFhC;AAIH,OAjBL;AAmBH,KApJkB;;AAEf,SAAKsC,KAAL,GAAa;AACTF,MAAAA,aAAa,EAAE,CACX;AACItC,QAAAA,SAAS,EAAE,oBADf;AAEIyC,QAAAA,IAAI,EAAE,qBAFV;AAGItC,QAAAA,KAAK,EAAE,GAHX;AAIID,QAAAA,SAAS,EAAE;AAJf,OADW,EAOX;AACIF,QAAAA,SAAS,EAAE,aADf;AAEIyC,QAAAA,IAAI,EAAE,cAFV;AAGItC,QAAAA,KAAK,EAAE,GAHX;AAIID,QAAAA,SAAS,EAAE;AAJf,OAPW,CADN;AAeTkC,MAAAA,YAAY,EAAE,EAfL;AAgBTM,MAAAA,SAAS,EAAE,KAhBF;AAiBTZ,MAAAA,KAAK,EAAE;AAjBE,KAAb;AAmBH;;AAEDa,EAAAA,iBAAiB,GAAG;AAChB,UAAMhC,WAAW,GAAG,KAAKb,KAAL,CAAWc,UAA/B;AACA,UAAMC,MAAM,GAAG,KAAKf,KAAL,CAAWe,MAA1B;AACA,UAAME,KAAK,GAAG,KAAKjB,KAAL,CAAWiB,KAAzB;AACA,SAAKoB,QAAL,CAAc;AAAEO,MAAAA,SAAS,EAAE;AAAb,KAAd;AACA,QAAIE,MAAM,GACNvD,GAAG,GACH,eADA,GAEAsB,WAFA,GAGA,WAHA,GAIAE,MAJA,GAKA,SALA,GAMAE,KAPJ;AAQAN,IAAAA,OAAO,CAACC,GAAR,CAAYkC,MAAZ;AAEA1B,IAAAA,KAAK,CAAC0B,MAAD,EAAS;AACVzB,MAAAA,MAAM,EAAE,KADE;AAEV3B,MAAAA,OAAO,EAAEA,OAFC;AAGV4B,MAAAA,IAAI,EAAE;AAHI,KAAT,CAAL,CAKKG,IALL,CAKUC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH,OAFD,MAEO;AACH,cAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACH;AACJ,KAXL,EAYKJ,IAZL,CAYUK,IAAI,IAAI;AACVnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,IAAI,CAACzB,KAAjB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAOkB,IAAI,CAACzB,KAAxB;AACA,WAAKgC,QAAL,CACIE,SAAS,KAAK;AACVC,QAAAA,aAAa,EAAED,SAAS,CAACC,aAAV,CAAwBC,GAAxB,CAA4BP,MAAM,IAC7CA,MAAM,CAAC7B,KAAP,KAAiByB,IAAI,CAACzB,KAAtB,qBACW6B,MADX;AACmB9B,UAAAA,SAAS,EAAE;AAD9B,aAEM8B,MAHK;AADL,OAAL,CADb,EAQI,YAAW;AACPvB,QAAAA,OAAO,CAACC,GAAR,CACI,aADJ,EAEI,KAAK8B,KAAL,CAAWF,aAAX,CAAyB,CAAzB,EAA4BpC,SAFhC;AAIAO,QAAAA,OAAO,CAACC,GAAR,CACI,oBADJ,EAEI,KAAK8B,KAAL,CAAWF,aAAX,CAAyB,CAAzB,EAA4BpC,SAFhC;AAIAO,QAAAA,OAAO,CAACC,GAAR,CACI,KAAK8B,KAAL,CAAWF,aAAX,CAAyB,CAAzB,EAA4BnC,KAA5B,KAAsCyB,IAAI,CAACzB,KAD/C;AAGH,OApBL;AAsBA,WAAKgC,QAAL,CAAc;AAAEO,QAAAA,SAAS,EAAE;AAAb,OAAd;AACH,KAtCL,EAuCKb,KAvCL,CAuCWC,KAAK,IAAI,KAAKK,QAAL,CAAc;AAAEL,MAAAA,KAAF;AAASY,MAAAA,SAAS,EAAE;AAApB,KAAd,CAvCpB;AAwCH;;AAEDG,EAAAA,kBAAkB,CAACC,SAAD,EAAYT,SAAZ,EAAuB;AACrC,QAAIA,SAAS,CAACC,aAAV,CAAwB,CAAxB,EAA2BpC,SAA3B,KAAyC,IAA7C,EAAmD;AAC/C,UAAIM,SAAS,GAAG6B,SAAS,CAACC,aAAV,CAAwB,CAAxB,EAA2BnC,KAA3C;AACA,WAAKI,cAAL,CAAoBC,SAApB;AACH,KAHD,MAGO,IAAI6B,SAAS,CAACC,aAAV,CAAwB,CAAxB,EAA2BpC,SAA3B,KAAyC,IAA7C,EAAmD;AACtD,UAAIM,SAAS,GAAG6B,SAAS,CAACC,aAAV,CAAwB,CAAxB,EAA2BnC,KAA3C;AACA,WAAKI,cAAL,CAAoBC,SAApB;AACH;AACJ;;AA8DDX,EAAAA,MAAM,GAAG;AACL,QAAI,KAAK2C,KAAL,CAAWV,KAAf,EAAsB;AAClB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKU,KAAL,CAAWV,KAAX,CAAiBiB,OAArB,CAAP;AACH;;AACD,QAAI,KAAKP,KAAL,CAAWE,SAAf,EAA0B;AACtB,aACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAwB,QAAA,EAAE,EAAC,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ;AAKH;;AACD,UAAMM,UAAU,GAAG,KAAKR,KAAL,CAAWF,aAAX,CAAyBC,GAAzB,CAA6B,CAACP,MAAD,EAASiB,CAAT,KAC5C,oBAAC,WAAD;AACI,MAAA,EAAE,EAAEA,CADR;AAEI,MAAA,GAAG,EAAE/D,QAAQ,EAFjB;AAGI,MAAA,SAAS,EAAE8C,MAAM,CAAChC,SAHtB;AAII,MAAA,UAAU,EAAEgC,MAAM,CAACS,IAJvB;AAKI,MAAA,KAAK,EAAET,MAAM,CAAC7B,KALlB;AAMI,MAAA,SAAS,EAAE6B,MAAM,CAAC9B,SANtB;AAOI,MAAA,QAAQ,EAAE,KAAK6B,YAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADe,CAAnB;AAWA,WACI;AAAK,MAAA,EAAE,EAAC,QAAR;AAAiB,MAAA,SAAS,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAM,MAAA,SAAS,EAAC,YAAhB;AAA6B,MAAA,EAAE,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFJ,EAKKiB,UALL,CADJ;AASH;;AAtLgC;;AAyLrC,eAAe3C,MAAf","sourcesContent":["import React from \"react\";\nimport uniqueId from \"lodash/uniqueId\";\n\nlet base64 = require(\"base-64\");\nlet url = \"https://test-api.mobileaxept.com/micro_service/page-properties\";\nlet username = \"spencer.grimes@mobileaxept.com\";\nlet password = \"Temp654321\";\nlet headers = {\n    Authorization: \"Basic \" + base64.encode(username + \":\" + password),\n    \"Content-Type\": \"application/json\"\n};\n\nclass RadioOption extends React.Component {\n    render() {\n        const {\n            id,\n            className,\n            optionName,\n            isChecked,\n            value,\n            onChange\n        } = this.props;\n        return (\n            <div className={className}>\n                <div className=\"radio\">\n                    <label htmlFor={\"optionsRadios\" + id}>\n                        <input\n                            id={\"optionsRadios\" + id}\n                            type=\"radio\"\n                            name={optionName}\n                            value={value}\n                            onChange={onChange}\n                            checked={isChecked}\n                        />\n                        {optionName}\n                    </label>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Layout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            layoutOptions: [\n                {\n                    className: \"fundSelectionFirst\",\n                    name: \"Fund Seletion First\",\n                    value: \"1\",\n                    isChecked: false\n                },\n                {\n                    className: \"amountFirst\",\n                    name: \"Amount First\",\n                    value: \"2\",\n                    isChecked: false\n                }\n            ],\n            layoutChosen: \"\",\n            isLoading: false,\n            error: null\n        };\n    }\n\n    componentDidMount() {\n        const client_code = this.props.clientCode;\n        const pageId = this.props.pageId;\n        const field = this.props.field;\n        this.setState({ isLoading: true });\n        let newUrl =\n            url +\n            \"?client_code=\" +\n            client_code +\n            \"&page_id=\" +\n            pageId +\n            \"&field=\" +\n            field;\n        console.log(newUrl);\n\n        fetch(newUrl, {\n            method: \"GET\",\n            headers: headers,\n            mode: \"cors\"\n        })\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                } else {\n                    throw new Error(\"Something went wrong ...\");\n                }\n            })\n            .then(data => {\n                console.log(data.value);\n                console.log(typeof data.value);\n                this.setState(\n                    prevState => ({\n                        layoutOptions: prevState.layoutOptions.map(option =>\n                            option.value === data.value\n                                ? { ...option, isChecked: true }\n                                : option\n                        )\n                    }),\n                    function() {\n                        console.log(\n                            \"amountFirst\",\n                            this.state.layoutOptions[0].isChecked\n                        );\n                        console.log(\n                            \"fundSelectionFirst\",\n                            this.state.layoutOptions[1].isChecked\n                        );\n                        console.log(\n                            this.state.layoutOptions[0].value === data.value\n                        );\n                    }\n                );\n                this.setState({ isLoading: false });\n            })\n            .catch(error => this.setState({ error, isLoading: false }));\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.layoutOptions[0].isChecked !== true) {\n            let new_value = prevState.layoutOptions[0].value;\n            this.autoSaveOption(new_value);\n        } else if (prevState.layoutOptions[1].isChecked !== true) {\n            let new_value = prevState.layoutOptions[1].value;\n            this.autoSaveOption(new_value);\n        }\n    }\n\n    autoSaveOption = new_value => {\n        console.log(\"autosaved layoutOption\");\n        const client_code = this.props.clientCode;\n        const pageId = this.props.pageId;\n        const fileld = this.props.field;\n        let body = {\n            client_code: client_code,\n            page_id: pageId,\n            field: field,\n            new_value: new_value\n        };\n\n        fetch(url, {\n            method: \"POST\",\n            headers: headers,\n            mode: \"cors\",\n            body: JSON.stringify(body)\n        })\n            .then(response => {\n                if (response.ok) {\n                    console.log(response);\n                    return response.json();\n                } else {\n                    throw new Error(\"Something went wrong ...\");\n                }\n            })\n            .then(data => {\n                console.log(data);\n            })\n            .catch(error => console.log(error));\n    };\n\n    handleChange = option => {\n        const isChecked = option.target.checked;\n        // console.log(isChecked);\n        const value = option.target.value;\n        console.log(value);\n\n        this.setState({ layoutChosen: value });\n        this.setState(\n            prevState => ({\n                layoutOptions: prevState.layoutOptions.map(option =>\n                    option.value === value\n                        ? { ...option, isChecked: isChecked }\n                        : { ...option, isChecked: !isChecked }\n                )\n            }),\n            function() {\n                console.log(\n                    \"amountFirst\",\n                    this.state.layoutOptions[0].isChecked\n                );\n                console.log(\n                    \"fundSelectionFirst\",\n                    this.state.layoutOptions[1].isChecked\n                );\n            }\n        );\n    };\n\n    render() {\n        if (this.state.error) {\n            return <p>{this.state.error.message}</p>;\n        }\n        if (this.state.isLoading) {\n            return (\n                <div className=\"loader\" id=\"loader-1\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            );\n        }\n        const optionList = this.state.layoutOptions.map((option, i) => (\n            <RadioOption\n                id={i}\n                key={uniqueId()}\n                className={option.className}\n                optionName={option.name}\n                value={option.value}\n                isChecked={option.isChecked}\n                onChange={this.handleChange}\n            />\n        ));\n        return (\n            <div id=\"layout\" className=\"layout\">\n                <h3>Layout</h3>\n                <span className=\"help-block\" id=\"helpBlock\">\n                    Choose the page layout\n                </span>\n                {optionList}\n            </div>\n        );\n    }\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}