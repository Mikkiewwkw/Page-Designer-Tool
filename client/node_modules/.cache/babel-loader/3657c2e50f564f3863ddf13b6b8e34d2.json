{"ast":null,"code":"import _objectSpread from \"/Users/kaiweiwu/Documents/page_designer/page-designer/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/kaiweiwu/Documents/page_designer/page-designer/src/Layout.js\";\nimport React from \"react\";\nimport uniqueId from \"lodash/uniqueId\";\n\nclass RadioOption {\n  render() {\n    const _this$props = this.props,\n          optionName = _this$props.optionName,\n          isChecked = _this$props.isChecked,\n          value = _this$props.value,\n          onChange = _this$props.onChange;\n    return React.createElement(\"div\", {\n      className: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      key: uniqueId(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"optionsRadios\",\n      value: value,\n      onChange: onChange,\n      checked: isChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }), optionName));\n  }\n\n}\n\nclass Layout extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = option => {\n      const isChecked = option.target.checked;\n      const value = option.target.value;\n      this.setState({\n        layoutChosen: value\n      });\n      this.setState(prevState => {\n        prevState.layoutOptions.map(option => option.name === value ? _objectSpread({}, option, {\n          isChecked: isChecked\n        }) : _objectSpread({}, option, {\n          isChecked: !option.isChecked\n        }));\n      });\n    };\n\n    this.state = {\n      layoutOptions: [{\n        name: \"Number First\",\n        isChecked: false\n      }, {\n        name: \"Fund Seletion First\",\n        isChecked: false\n      }],\n      layoutChosen: \"\"\n    };\n  }\n\n  render() {\n    const optionList = this.state.layoutOptions.map(option => React.createElement(RadioOption, {\n      optionName: option.name,\n      value: option.name,\n      isChecked: option.isChecked,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      id: \"layout\",\n      class: \"layout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Layout\"), React.createElement(\"span\", {\n      class: \"help-block\",\n      id: \"helpBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Choose the page layout\"), optionList);\n  }\n\n}\n\nexport default Layout;","map":{"version":3,"sources":["/Users/kaiweiwu/Documents/page_designer/page-designer/src/Layout.js"],"names":["React","uniqueId","RadioOption","render","props","optionName","isChecked","value","onChange","name","Layout","Component","constructor","handleChange","option","target","checked","setState","layoutChosen","prevState","layoutOptions","map","state","optionList"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,MAAMC,WAAN,CAAkB;AACdC,EAAAA,MAAM,GAAG;AAAA,wBAC8C,KAAKC,KADnD;AAAA,UACGC,UADH,eACGA,UADH;AAAA,UACeC,SADf,eACeA,SADf;AAAA,UAC0BC,KAD1B,eAC0BA,KAD1B;AAAA,UACiCC,QADjC,eACiCA,QADjC;AAEL,WACI;AAAK,MAAA,SAAS,EAAEC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,GAAG,EAAER,QAAQ,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,IAAI,EAAC,eAFT;AAGI,MAAA,KAAK,EAAEM,KAHX;AAII,MAAA,QAAQ,EAAEC,QAJd;AAKI,MAAA,OAAO,EAAEF,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQKD,UARL,CADJ,CADJ;AAcH;;AAjBa;;AAoBlB,MAAMK,MAAN,SAAqBV,KAAK,CAACW,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACR,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBS,YAXmB,GAWJC,MAAM,IAAI;AACrB,YAAMR,SAAS,GAAGQ,MAAM,CAACC,MAAP,CAAcC,OAAhC;AACA,YAAMT,KAAK,GAAGO,MAAM,CAACC,MAAP,CAAcR,KAA5B;AAEA,WAAKU,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAEX;AAAhB,OAAd;AACA,WAAKU,QAAL,CAAcE,SAAS,IAAI;AACvBA,QAAAA,SAAS,CAACC,aAAV,CAAwBC,GAAxB,CAA4BP,MAAM,IAC9BA,MAAM,CAACL,IAAP,KAAgBF,KAAhB,qBACWO,MADX;AACmBR,UAAAA,SAAS,EAAEA;AAD9B,+BAEWQ,MAFX;AAEmBR,UAAAA,SAAS,EAAE,CAACQ,MAAM,CAACR;AAFtC,UADJ;AAKH,OAND;AAOH,KAvBkB;;AAEf,SAAKgB,KAAL,GAAa;AACTF,MAAAA,aAAa,EAAE,CACX;AAAEX,QAAAA,IAAI,EAAE,cAAR;AAAwBH,QAAAA,SAAS,EAAE;AAAnC,OADW,EAEX;AAAEG,QAAAA,IAAI,EAAE,qBAAR;AAA+BH,QAAAA,SAAS,EAAE;AAA1C,OAFW,CADN;AAKTY,MAAAA,YAAY,EAAE;AALL,KAAb;AAOH;;AAgBDf,EAAAA,MAAM,GAAG;AACL,UAAMoB,UAAU,GAAG,KAAKD,KAAL,CAAWF,aAAX,CAAyBC,GAAzB,CAA6BP,MAAM,IAClD,oBAAC,WAAD;AACI,MAAA,UAAU,EAAEA,MAAM,CAACL,IADvB;AAEI,MAAA,KAAK,EAAEK,MAAM,CAACL,IAFlB;AAGI,MAAA,SAAS,EAAEK,MAAM,CAACR,SAHtB;AAII,MAAA,QAAQ,EAAE,KAAKO,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADe,CAAnB;AAQA,WACI;AAAK,MAAA,EAAE,EAAC,QAAR;AAAiB,MAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAM,MAAA,KAAK,EAAC,YAAZ;AAAyB,MAAA,EAAE,EAAC,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFJ,EAKKU,UALL,CADJ;AASH;;AA5CgC;;AA+CrC,eAAeb,MAAf","sourcesContent":["import React from \"react\";\nimport uniqueId from \"lodash/uniqueId\";\n\nclass RadioOption {\n    render() {\n        const { optionName, isChecked, value, onChange } = this.props;\n        return (\n            <div className={name}>\n                <label key={uniqueId()}>\n                    <input\n                        type=\"radio\"\n                        name=\"optionsRadios\"\n                        value={value}\n                        onChange={onChange}\n                        checked={isChecked}\n                    />\n                    {optionName}\n                </label>\n            </div>\n        );\n    }\n}\n\nclass Layout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            layoutOptions: [\n                { name: \"Number First\", isChecked: false },\n                { name: \"Fund Seletion First\", isChecked: false }\n            ],\n            layoutChosen: \"\"\n        };\n    }\n\n    handleChange = option => {\n        const isChecked = option.target.checked;\n        const value = option.target.value;\n\n        this.setState({ layoutChosen: value });\n        this.setState(prevState => {\n            prevState.layoutOptions.map(option =>\n                option.name === value\n                    ? { ...option, isChecked: isChecked }\n                    : { ...option, isChecked: !option.isChecked }\n            );\n        });\n    };\n\n    render() {\n        const optionList = this.state.layoutOptions.map(option => (\n            <RadioOption\n                optionName={option.name}\n                value={option.name}\n                isChecked={option.isChecked}\n                onChange={this.handleChange}\n            />\n        ));\n        return (\n            <div id=\"layout\" class=\"layout\">\n                <h4>Layout</h4>\n                <span class=\"help-block\" id=\"helpBlock\">\n                    Choose the page layout\n                </span>\n                {optionList}\n            </div>\n        );\n    }\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}