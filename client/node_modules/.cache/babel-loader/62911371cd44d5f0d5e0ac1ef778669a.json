{"ast":null,"code":"var _jsxFileName = \"/Users/kaiweiwu/Documents/page_designer/client/src/Logo.js\";\nimport React from \"react\";\nimport uniqueId from \"lodash/uniqueId\";\nimport downloadS3 from \"./s3config\";\nimport S3FileUpload from \"react-s3\";\nimport { uploadFile } from \"react-s3\";\nimport axios from \"axios\";\nimport Dropzone from \"./Dropzone\";\n\nrequire(\"dotenv\").config(); //need this\n// s3.getSignedUrl('getObject', params, function (err, url) {\n//     console.log('Your generated pre-signed URL is', url);\n// });\n\n\nvar AWS = require(\"aws-sdk\"); // var keys = [\"194/194-logo-black.png\", \"194/kitty.jpg\"];\n// var list = [];\n\n\nAWS.config.update({\n  accessKeyId: \"AKIAXKCRRSD3GJHJE65C\",\n  secretAccessKey: \"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\",\n  region: \"us-west-2\"\n});\nconst s3 = new AWS.S3(); // var urlparams = { Bucket: \"max-client-logos\", Key: keys[0] };\n// s3.getSignedUrl(\"getObject\", urlparams, function(err, url) {\n//     list.push(url);\n//     console.log(\"Your generated pre-signed URL is\", url);\n// });\n// urlparams = { Bucket: \"max-client-logos\", Key: keys[1] };\n// var hapi = s3.getSignedUrl(\"getObject\", urlparams);\n// list.push(hapi);\n//\n// function createAllUrl(allkey) {\n//     let allURL = [];\n//     const length = allkey.length;\n//     console.log(length);\n//     for (let i = 0; i < length; i++) {\n//         console.log(\"im a dog\");\n//         let params = { Bucket: \"max-client-logos\", Key: allkey[i] };\n//         let url = s3.getSignedUrl(\"getObject\", params);\n//         allURL.push(url);\n//     }\n//     console.log(allURL);\n//     return allURL;\n// }\n// createAllUrl(keys);\n\nclass Logo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = option => {\n      const value = option.target.value;\n      this.setState({\n        choice: value\n      });\n    };\n\n    this.handleClick = () => {\n      this.setState(prevState => ({\n        showDropZone: !prevState.showDropZone\n      }));\n    };\n\n    this.state = {\n      showDropZone: false,\n      choice: \"\",\n      options: [],\n      error: null,\n      isLoading: false //Need to somehow set up the initial state so that the user can see the current stage of the logo\n\n    }; // this.getKeys = this.getKeys.bind(this);\n  }\n\n  //\n  // createAllUrl = allkey => {\n  //     let allURL = [];\n  //     const length = allkey.length;\n  //     for (let i = 0; i < length; i++) {\n  //         console.log(\"im a dog\");\n  //         let params = {\n  //             Bucket: this.props.bucketName,\n  //             key: allkey[\"index\" === i][\"Key\"]\n  //         };\n  //         let url = s3.getSignedUrl(\"getObject\", params);\n  //         allURL.push(url);\n  //         console.log(i, allURL);\n  //     }\n  //     return allURL;\n  // };\n  async componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n\n    try {\n      const result = await downloadS3(this.props.prefix, this.props.bucketName); // console.log(\"allkey\", result);\n\n      this.setState({\n        options: result,\n        isLoading: false\n      });\n    } catch (error) {\n      this.setState({\n        error,\n        isLoading: false\n      });\n    }\n  }\n\n  render() {\n    if (this.state.error) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.state.error.message);\n    }\n\n    if (this.state.isLoading) {\n      return React.createElement(\"div\", {\n        className: \"loader\",\n        id: \"loader-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Loading...\"));\n    }\n\n    if (this.state.loading) {\n      return React.createElement(\"div\", {\n        className: \"d-flex align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Loading...\"), React.createElement(\"div\", {\n        className: \"spinner-border text-primary ml-auto\",\n        role: \"status\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }));\n    } // var list = [];\n    // (async function() {\n    //     var allKeys = await downloadS3(\n    //         this.props.prefix,\n    //         this.props.bucketName\n    //     );\n    //     list = allKeys;\n    // })();\n\n\n    var list = this.state.options;\n    const allURL = list.map(key => s3.getSignedUrl(\"getObject\", {\n      Bucket: this.props.bucketName,\n      Key: key,\n      Expires: 300\n    })); // console.log(\"allURL\", allURL);\n    // const allURL = this.createAllUrl(allkey);\n\n    const logoList = allURL.map(url => React.createElement(\"div\", {\n      key: uniqueId(),\n      className: \"container col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"radio-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"inlineRadioOptions\",\n      value: url,\n      onChange: this.handleChnage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"logoImage\",\n      src: url,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }))));\n    const backgroundColor = {\n      background: \"00aabb\"\n    };\n    return React.createElement(\"div\", {\n      id: \"logo\",\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Logo\"), React.createElement(\"span\", {\n      className: \"help-block\",\n      id: \"helpBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Choose page logo\"), React.createElement(\"div\", {\n      className: \"logo-options\",\n      style: backgroundColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, logoList), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: \"logo-upload form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-10 col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      name: \"button\",\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Add a new logo\"))), React.createElement(Dropzone, {\n      prefix: this.props.prefix,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Logo;","map":{"version":3,"sources":["/Users/kaiweiwu/Documents/page_designer/client/src/Logo.js"],"names":["React","uniqueId","downloadS3","S3FileUpload","uploadFile","axios","Dropzone","require","config","AWS","update","accessKeyId","secretAccessKey","region","s3","S3","Logo","Component","constructor","props","handleChange","option","value","target","setState","choice","handleClick","prevState","showDropZone","state","options","error","isLoading","componentDidMount","result","prefix","bucketName","render","message","loading","list","allURL","map","key","getSignedUrl","Bucket","Key","Expires","logoList","url","handleChnage","backgroundColor","background"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport uniqueId from \"lodash/uniqueId\";\nimport downloadS3 from \"./s3config\";\nimport S3FileUpload from \"react-s3\";\nimport { uploadFile } from \"react-s3\";\nimport axios from \"axios\";\nimport Dropzone from \"./Dropzone\";\nrequire(\"dotenv\").config(); //need this\n// s3.getSignedUrl('getObject', params, function (err, url) {\n//     console.log('Your generated pre-signed URL is', url);\n// });\nvar AWS = require(\"aws-sdk\");\n// var keys = [\"194/194-logo-black.png\", \"194/kitty.jpg\"];\n// var list = [];\nAWS.config.update({\n    accessKeyId: \"AKIAXKCRRSD3GJHJE65C\",\n    secretAccessKey: \"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\",\n    region: \"us-west-2\"\n});\nconst s3 = new AWS.S3();\n// var urlparams = { Bucket: \"max-client-logos\", Key: keys[0] };\n// s3.getSignedUrl(\"getObject\", urlparams, function(err, url) {\n//     list.push(url);\n//     console.log(\"Your generated pre-signed URL is\", url);\n// });\n// urlparams = { Bucket: \"max-client-logos\", Key: keys[1] };\n// var hapi = s3.getSignedUrl(\"getObject\", urlparams);\n// list.push(hapi);\n//\n// function createAllUrl(allkey) {\n//     let allURL = [];\n//     const length = allkey.length;\n//     console.log(length);\n//     for (let i = 0; i < length; i++) {\n//         console.log(\"im a dog\");\n//         let params = { Bucket: \"max-client-logos\", Key: allkey[i] };\n//         let url = s3.getSignedUrl(\"getObject\", params);\n//         allURL.push(url);\n//     }\n//     console.log(allURL);\n//     return allURL;\n// }\n// createAllUrl(keys);\n\nclass Logo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showDropZone: false,\n            choice: \"\",\n            options: [],\n            error: null,\n            isLoading: false //Need to somehow set up the initial state so that the user can see the current stage of the logo\n        };\n        // this.getKeys = this.getKeys.bind(this);\n    }\n\n    handleChange = option => {\n        const value = option.target.value;\n        this.setState({ choice: value });\n    };\n    //\n\n    // createAllUrl = allkey => {\n    //     let allURL = [];\n    //     const length = allkey.length;\n    //     for (let i = 0; i < length; i++) {\n    //         console.log(\"im a dog\");\n    //         let params = {\n    //             Bucket: this.props.bucketName,\n    //             key: allkey[\"index\" === i][\"Key\"]\n    //         };\n    //         let url = s3.getSignedUrl(\"getObject\", params);\n    //         allURL.push(url);\n    //         console.log(i, allURL);\n    //     }\n    //     return allURL;\n    // };\n    async componentDidMount() {\n        this.setState({ isLoading: true });\n        try {\n            const result = await downloadS3(\n                this.props.prefix,\n                this.props.bucketName\n            );\n            // console.log(\"allkey\", result);\n            this.setState({ options: result, isLoading: false });\n        } catch (error) {\n            this.setState({ error, isLoading: false });\n        }\n    }\n\n    handleClick = () => {\n        this.setState(prevState => ({ showDropZone: !prevState.showDropZone }));\n    };\n\n    render() {\n        if (this.state.error) {\n            return <p>{this.state.error.message}</p>;\n        }\n        if (this.state.isLoading) {\n            return (\n                <div className=\"loader\" id=\"loader-1\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            );\n        }\n        if (this.state.loading) {\n            return (\n                <div className=\"d-flex align-items-center\">\n                    <strong>Loading...</strong>\n                    <div\n                        className=\"spinner-border text-primary ml-auto\"\n                        role=\"status\"\n                        aria-hidden=\"true\"\n                    ></div>\n                </div>\n            );\n        }\n\n        // var list = [];\n        // (async function() {\n        //     var allKeys = await downloadS3(\n        //         this.props.prefix,\n        //         this.props.bucketName\n        //     );\n        //     list = allKeys;\n        // })();\n\n        var list = this.state.options;\n        const allURL = list.map(key =>\n            s3.getSignedUrl(\"getObject\", {\n                Bucket: this.props.bucketName,\n                Key: key,\n                Expires: 300\n            })\n        );\n        // console.log(\"allURL\", allURL);\n        // const allURL = this.createAllUrl(allkey);\n        const logoList = allURL.map(url => (\n            <div key={uniqueId()} className=\"container col-md-12\">\n                <label className=\"radio-inline\">\n                    <input\n                        type=\"radio\"\n                        name=\"inlineRadioOptions\"\n                        value={url}\n                        onChange={this.handleChnage}\n                    />\n                    <img className=\"logoImage\" src={url} alt=\"\" />\n                </label>\n            </div>\n        ));\n\n        const backgroundColor = {\n            background: \"00aabb\"\n        };\n        return (\n            <div id=\"logo\" className=\"logo\">\n                <h3>Logo</h3>\n                <span className=\"help-block\" id=\"helpBlock\">\n                    Choose page logo\n                </span>\n                <div className=\"logo-options\" style={backgroundColor}>\n                    {logoList}\n                </div>\n                <br />\n                <form className=\"logo-upload form-group row\">\n                    <div className=\"col-sm-10 col-md-12\">\n                        <button\n                            name=\"button\"\n                            className=\"btn btn-primary\"\n                            type=\"submit\"\n                            onClick={this.handleClick}\n                        >\n                            Add a new logo\n                        </button>\n                    </div>\n                </form>\n                <Dropzone prefix={this.props.prefix} />\n            </div>\n        );\n    }\n}\n\nexport default Logo;\n"]},"metadata":{},"sourceType":"module"}