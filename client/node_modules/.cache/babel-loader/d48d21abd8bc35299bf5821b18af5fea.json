{"ast":null,"code":"var _jsxFileName = \"/Users/kaiweiwu/Documents/page_designer/page-designer/src/Dropzone.js\";\nimport React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\n\nfunction Dropzone() {\n  const onDrop = useCallback(acceptedFiles => {\n    const reader = new FileReader();\n\n    reader.onabort = () => console.log(\"file reading was aborted\");\n\n    reader.onerror = () => console.log(\"file reading has failed\");\n\n    reader.onload = () => {\n      // Do whatever you want with the file contents\n      const binaryStr = reader.result;\n      console.log(binaryStr);\n    };\n\n    acceptedFiles.forEach(file => reader.readAsBinaryString(file));\n  }, []);\n\n  const _useDropzone = useDropzone({\n    onDrop\n  }),\n        getRootProps = _useDropzone.getRootProps,\n        getInputProps = _useDropzone.getInputProps,\n        isDragActive = _useDropzone.isDragActive;\n\n  return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Drag 'n' drop some files here, or click to select files\"));\n}\n\nexport default Dropzone;","map":{"version":3,"sources":["/Users/kaiweiwu/Documents/page_designer/page-designer/src/Dropzone.js"],"names":["React","useCallback","useDropzone","Dropzone","onDrop","acceptedFiles","reader","FileReader","onabort","console","log","onerror","onload","binaryStr","result","forEach","file","readAsBinaryString","getRootProps","getInputProps","isDragActive"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,gBAA5B;;AAEA,SAASC,QAAT,GAAoB;AAChB,QAAMC,MAAM,GAAGH,WAAW,CAACI,aAAa,IAAI;AACxC,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,IAAAA,MAAM,CAACE,OAAP,GAAiB,MAAMC,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAvB;;AACAJ,IAAAA,MAAM,CAACK,OAAP,GAAiB,MAAMF,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAvB;;AACAJ,IAAAA,MAAM,CAACM,MAAP,GAAgB,MAAM;AAClB;AACA,YAAMC,SAAS,GAAGP,MAAM,CAACQ,MAAzB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;AACH,KAJD;;AAMAR,IAAAA,aAAa,CAACU,OAAd,CAAsBC,IAAI,IAAIV,MAAM,CAACW,kBAAP,CAA0BD,IAA1B,CAA9B;AACH,GAZyB,EAYvB,EAZuB,CAA1B;;AADgB,uBAcsCd,WAAW,CAAC;AAC9DE,IAAAA;AAD8D,GAAD,CAdjD;AAAA,QAcRc,YAdQ,gBAcRA,YAdQ;AAAA,QAcMC,aAdN,gBAcMA,aAdN;AAAA,QAcqBC,YAdrB,gBAcqBA,YAdrB;;AAkBhB,SACI,6CAASF,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACI,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAFJ,CADJ;AAMH;;AAED,eAAehB,QAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\n\nfunction Dropzone() {\n    const onDrop = useCallback(acceptedFiles => {\n        const reader = new FileReader();\n\n        reader.onabort = () => console.log(\"file reading was aborted\");\n        reader.onerror = () => console.log(\"file reading has failed\");\n        reader.onload = () => {\n            // Do whatever you want with the file contents\n            const binaryStr = reader.result;\n            console.log(binaryStr);\n        };\n\n        acceptedFiles.forEach(file => reader.readAsBinaryString(file));\n    }, []);\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\n        onDrop\n    });\n\n    return (\n        <div {...getRootProps()}>\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop some files here, or click to select files</p>\n        </div>\n    );\n}\n\nexport default Dropzone;\n"]},"metadata":{},"sourceType":"module"}