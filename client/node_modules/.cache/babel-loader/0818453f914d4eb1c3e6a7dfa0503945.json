{"ast":null,"code":"import _objectSpread from \"/Users/kaiweiwu/Documents/page_designer/page-designer/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/kaiweiwu/Documents/page_designer/page-designer/src/FundSelection.js\";\nimport React from \"react\"; // import Ordering from \"./Ordering\";\n\nimport Sortable from 'react-sortablejs';\nimport uniqueId from 'lodash/uniqueId';\nimport 'string';\nimport SortableList from './SortableList'; // import Sortable from 'sortablejs';\n\nclass FundSelection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onAddingOption = option => {\n      const isChecked = option.target.checked;\n      const value = option.target.value;\n      this.setState(prevState => ({\n        optionList: prevState.optionList.map(option => option.name === value ? _objectSpread({}, option, {\n          isChecked: isChecked\n        }) : option)\n      }));\n      if (isChecked) this.setState(prevState => ({\n        optionsChecked: [...prevState.optionsChecked, value]\n      }));else {\n        const newoptionsChecked = this.state.optionsChecked.filter(option => option !== value);\n        this.setState({\n          optionsChecked: newoptionsChecked\n        });\n      }\n    };\n\n    this.state = {\n      optionList: [{\n        name: \"apples\",\n        isChecked: false\n      }, {\n        name: \"Banana\",\n        isChecked: false\n      }, {\n        name: \"orange\",\n        isChecked: false\n      }],\n      optionsChecked: []\n    };\n  }\n\n  render() {\n    const option_list = this.state.optionList.map(option => // const id = \"inlineCheckbox\" + i.toString();\n    React.createElement(\"label\", {\n      key: uniqueId(),\n      className: \"checkbox-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      value: option.name,\n      checked: option.isChecked,\n      onChange: this.onAddingOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), option.name)); // var order_list = this.state.optionsChecked.map((option, i) =>\n    // <li key={uniqueId()} className=\"list-group-item\">\n    //   {option}\n    // </li>\n    // );\n\n    return React.createElement(\"div\", {\n      className: \"apperance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Apperance\"), React.createElement(\"span\", {\n      className: \"help-block\",\n      id: \"helpBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Choose which funds are visible on the page\"), React.createElement(\"div\", {\n      className: \"multi-selection-fund\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, option_list), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ordering\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Ordering\"), React.createElement(\"span\", {\n      className: \"help-block\",\n      id: \"helpBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Choose which order the funds are displayed on the page\"), React.createElement(\"div\", {\n      id: \"simpleList\",\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(SortableList, {\n      items: this.state.optionsChecked,\n      onChange: options => {\n        this.setState({\n          optionsChecked: options\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default FundSelection;","map":{"version":3,"sources":["/Users/kaiweiwu/Documents/page_designer/page-designer/src/FundSelection.js"],"names":["React","Sortable","uniqueId","SortableList","FundSelection","Component","constructor","props","onAddingOption","option","isChecked","target","checked","value","setState","prevState","optionList","map","name","optionsChecked","newoptionsChecked","state","filter","render","option_list","options"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import Ordering from \"./Ordering\";\nimport Sortable from 'react-sortablejs';\nimport uniqueId from 'lodash/uniqueId';\nimport 'string';\nimport SortableList from './SortableList';\n// import Sortable from 'sortablejs';\n\nclass FundSelection extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      optionList: [{ name: \"apples\", isChecked: false }, { name: \"Banana\", isChecked: false }, { name: \"orange\", isChecked: false }],\n      optionsChecked: []\n    }\n  }\n\n  onAddingOption = (option) => {\n    const isChecked = option.target.checked;\n    const value = option.target.value;\n\n    this.setState(prevState => ({ optionList: prevState.optionList.map(option => option.name === value ? { ...option, isChecked: isChecked } : option) }));\n\n    if (isChecked)\n      this.setState(prevState => ({optionsChecked: [...prevState.optionsChecked, value] }));\n    else {\n      const newoptionsChecked = this.state.optionsChecked.filter(option => option !== value);\n      this.setState({ optionsChecked: newoptionsChecked });\n    }\n  }\n\n\n\n  render() {\n    const option_list = this.state.optionList.map((option) =>\n      // const id = \"inlineCheckbox\" + i.toString();\n      <label key={uniqueId()} className=\"checkbox-inline\">\n        <input type=\"checkbox\" value={option.name} checked={option.isChecked} onChange={this.onAddingOption} />{option.name}\n      </label>\n    );\n    // var order_list = this.state.optionsChecked.map((option, i) =>\n    // <li key={uniqueId()} className=\"list-group-item\">\n    //   {option}\n    // </li>\n    // );\n\n    return (\n        <div className=\"apperance\">\n          <h4>Apperance</h4>\n          <span className=\"help-block\" id=\"helpBlock\">Choose which funds are visible on the page</span>\n          <div className=\"multi-selection-fund\">\n            {option_list}\n          </div>\n          <br/>\n          <div className=\"ordering\">\n            <h4>Ordering</h4>\n            <span className=\"help-block\" id=\"helpBlock\">Choose which order the funds are displayed on the page</span>\n            <div id=\"simpleList\" className=\"list-group\">\n              <SortableList\n                items={this.state.optionsChecked}\n                onChange={(options => {\n                  this.setState({optionsChecked:options});\n                })}\n              >\n              </SortableList>\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default FundSelection;\n"]},"metadata":{},"sourceType":"module"}