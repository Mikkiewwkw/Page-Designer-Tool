{"ast":null,"code":"var _jsxFileName = \"/Users/kaiweiwu/Documents/page_designer/page-designer/src/test.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport sign_s3 from \"logoUpload\";\n\nclass SketchExample extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = ev => {\n      this.setState({\n        success: false,\n        url: \"\"\n      });\n    };\n\n    this.handleUpload = ev => {\n      let file = this.uploadInput.files[0]; // Split the filename to get the name and type\n\n      let fileParts = this.uploadInput.files[0].name.split(\".\");\n      let fileName = fileParts[0];\n      let fileType = fileParts[1];\n      console.log(\"Preparing the upload\");\n      axios.post(\"http://localhost:3001/sign_s3\", {\n        fileName: fileName,\n        fileType: fileType\n      }).then(response => {\n        var returnData = response.data.data.returnData;\n        var signedRequest = returnData.signedRequest;\n        var url = returnData.url;\n        this.setState({\n          url: url\n        });\n        console.log(\"Recieved a signed request \" + signedRequest); // Put the fileType in the headers for the upload\n\n        var options = {\n          headers: {\n            \"Content-Type\": fileType\n          }\n        };\n        axios.put(signedRequest, file, options).then(result => {\n          console.log(\"Response from s3\");\n          this.setState({\n            success: true\n          });\n        }).catch(error => {\n          alert(\"ERROR \" + JSON.stringify(error));\n        });\n      }).catch(error => {\n        alert(JSON.stringify(error));\n      });\n    };\n\n    this.state = {\n      success: false,\n      url: \"\"\n    };\n  }\n\n  render() {\n    const Success_message = () => React.createElement(\"div\", {\n      style: {\n        padding: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        color: \"green\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"SUCCESSFUL UPLOAD\"), React.createElement(\"a\", {\n      href: this.state.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Access the file here\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"UPLOAD A FILE\"), this.state.success ? React.createElement(Success_message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }) : null, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      ref: ref => {\n        this.uploadInput = ref;\n      },\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"UPLOAD\")));\n  }\n\n}\n\nexport default SketchExample;","map":{"version":3,"sources":["/Users/kaiweiwu/Documents/page_designer/page-designer/src/test.js"],"names":["React","Component","axios","sign_s3","SketchExample","constructor","props","handleChange","ev","setState","success","url","handleUpload","file","uploadInput","files","fileParts","name","split","fileName","fileType","console","log","post","then","response","returnData","data","signedRequest","options","headers","put","result","catch","error","alert","JSON","stringify","state","render","Success_message","padding","color","ref"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport sign_s3 from \"logoUpload\";\nclass SketchExample extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            success: false,\n            url: \"\"\n        };\n    }\n\n    handleChange = ev => {\n        this.setState({ success: false, url: \"\" });\n    };\n    // Perform the upload\n    handleUpload = ev => {\n        let file = this.uploadInput.files[0];\n        // Split the filename to get the name and type\n        let fileParts = this.uploadInput.files[0].name.split(\".\");\n        let fileName = fileParts[0];\n        let fileType = fileParts[1];\n        console.log(\"Preparing the upload\");\n        axios\n            .post(\"http://localhost:3001/sign_s3\", {\n                fileName: fileName,\n                fileType: fileType\n            })\n            .then(response => {\n                var returnData = response.data.data.returnData;\n                var signedRequest = returnData.signedRequest;\n                var url = returnData.url;\n                this.setState({ url: url });\n                console.log(\"Recieved a signed request \" + signedRequest);\n\n                // Put the fileType in the headers for the upload\n                var options = {\n                    headers: {\n                        \"Content-Type\": fileType\n                    }\n                };\n                axios\n                    .put(signedRequest, file, options)\n                    .then(result => {\n                        console.log(\"Response from s3\");\n                        this.setState({ success: true });\n                    })\n                    .catch(error => {\n                        alert(\"ERROR \" + JSON.stringify(error));\n                    });\n            })\n            .catch(error => {\n                alert(JSON.stringify(error));\n            });\n    };\n\n    render() {\n        const Success_message = () => (\n            <div style={{ padding: 50 }}>\n                <h3 style={{ color: \"green\" }}>SUCCESSFUL UPLOAD</h3>\n                <a href={this.state.url}>Access the file here</a>\n                <br />\n            </div>\n        );\n        return (\n            <div className=\"App\">\n                <center>\n                    <h1>UPLOAD A FILE</h1>\n                    {this.state.success ? <Success_message /> : null}\n                    <input\n                        onChange={this.handleChange}\n                        ref={ref => {\n                            this.uploadInput = ref;\n                        }}\n                        type=\"file\"\n                    />\n                    <br />\n                    <button onClick={this.handleUpload}>UPLOAD</button>\n                </center>\n            </div>\n        );\n    }\n}\n\nexport default SketchExample;\n"]},"metadata":{},"sourceType":"module"}