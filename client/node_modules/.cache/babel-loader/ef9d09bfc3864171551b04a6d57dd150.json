{"ast":null,"code":"var _jsxFileName = \"/Users/kaiweiwu/Documents/page_designer/page-designer/src/Logo.js\";\nimport React from \"react\";\nimport uniqueId from \"lodash/uniqueId\";\nimport downloadS3 from \"./s3config.js\";\nimport S3FileUpload from \"react-s3\";\nimport { uploadFile } from \"react-s3\"; // s3.getSignedUrl('getObject', params, function (err, url) {\n//     console.log('Your generated pre-signed URL is', url);\n// });\n\nvar AWS = require(\"aws-sdk\"); // var keys = [\"194/194-logo-black.png\", \"194/kitty.jpg\"];\n// var list = [];\n\n\nAWS.config.update({\n  accessKeyId: \"AKIAXKCRRSD3GJHJE65C\",\n  secretAccessKey: \"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\",\n  region: \"us-west-2\"\n});\nconst s3 = new AWS.S3(); // var urlparams = { Bucket: \"max-client-logos\", Key: keys[0] };\n// s3.getSignedUrl(\"getObject\", urlparams, function(err, url) {\n//     list.push(url);\n//     console.log(\"Your generated pre-signed URL is\", url);\n// });\n// urlparams = { Bucket: \"max-client-logos\", Key: keys[1] };\n// var hapi = s3.getSignedUrl(\"getObject\", urlparams);\n// list.push(hapi);\n//\n// function createAllUrl(allkey) {\n//     let allURL = [];\n//     const length = allkey.length;\n//     console.log(length);\n//     for (let i = 0; i < length; i++) {\n//         console.log(\"im a dog\");\n//         let params = { Bucket: \"max-client-logos\", Key: allkey[i] };\n//         let url = s3.getSignedUrl(\"getObject\", params);\n//         allURL.push(url);\n//     }\n//     console.log(allURL);\n//     return allURL;\n// }\n// createAllUrl(keys);\n\nasync function getPresignedUploadUrl(bucket, key) {\n  const url = await s3.getSignedUrl(\"putObject\", {\n    Bucket: bucket,\n    Key: key,\n    ContentType: \"image/*\",\n    Expires: 300\n  }).promise();\n  return url;\n}\n\nclass Logo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = option => {\n      const value = option.target.value;\n      this.setState({\n        choice: value\n      });\n    };\n\n    this.handleLogoUpload = () => {\n      const config = {\n        bucketName: this.props.bucketName,\n        dirName: this.props.prefix,\n        accessKeyId: \"AKIAXKCRRSD3GJHJE65C\",\n        secretAccessKey: \"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\",\n        region: \"us-west-2\"\n      };\n      S3FileUpload.uploadFile(file, config).then(data => console.log(data)).catch(err => console.error(err));\n    };\n\n    this.state = {\n      choice: \"\",\n      options: [],\n      loading: true //Need to somehow set up the initial state so that the user can see the current stage of the logo\n\n    }; // this.getKeys = this.getKeys.bind(this);\n  }\n\n  // createAllUrl = allkey => {\n  //     let allURL = [];\n  //     const length = allkey.length;\n  //     for (let i = 0; i < length; i++) {\n  //         console.log(\"im a dog\");\n  //         let params = {\n  //             Bucket: this.props.bucketName,\n  //             key: allkey[\"index\" === i][\"Key\"]\n  //         };\n  //         let url = s3.getSignedUrl(\"getObject\", params);\n  //         allURL.push(url);\n  //         console.log(i, allURL);\n  //     }\n  //     return allURL;\n  // };\n  async componentDidMount() {\n    const result = await downloadS3(this.props.prefix, this.props.bucketName); // console.log(\"allkey\", result);\n\n    this.setState({\n      options: result,\n      loading: false\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return null;\n    } // var list = [];\n    // (async function() {\n    //     var allKeys = await downloadS3(\n    //         this.props.prefix,\n    //         this.props.bucketName\n    //     );\n    //     list = allKeys;\n    // })();\n\n\n    var list = this.state.options;\n    const allURL = list.map(key => s3.getSignedUrl(\"getObject\", {\n      Bucket: this.props.bucketName,\n      Key: key,\n      Expires: 300\n    })); // console.log(\"allURL\", allURL);\n    // const allURL = this.createAllUrl(allkey);\n\n    const logoList = allURL.map(url => React.createElement(\"div\", {\n      key: uniqueId(),\n      className: \"container col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"radio-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"inlineRadioOptions\",\n      value: url,\n      onChange: this.handleChnage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"logoImage\",\n      src: url,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }))));\n    return React.createElement(\"div\", {\n      id: \"logo\",\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Logo\"), React.createElement(\"span\", {\n      className: \"help-block\",\n      id: \"helpBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Choose page logo\"), React.createElement(\"div\", {\n      className: \"logo-options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, logoList), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      class: \"logo-upload form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-sm-10 col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      name: \"button\",\n      class: \"btn btn-primary\",\n      type: \"submit\",\n      onClick: this.uploadLogo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Upload a new logo\"))));\n  }\n\n}\n\nexport default Logo;","map":{"version":3,"sources":["/Users/kaiweiwu/Documents/page_designer/page-designer/src/Logo.js"],"names":["React","uniqueId","downloadS3","S3FileUpload","uploadFile","AWS","require","config","update","accessKeyId","secretAccessKey","region","s3","S3","getPresignedUploadUrl","bucket","key","url","getSignedUrl","Bucket","Key","ContentType","Expires","promise","Logo","Component","constructor","props","handleChange","option","value","target","setState","choice","handleLogoUpload","bucketName","dirName","prefix","file","then","data","console","log","catch","err","error","state","options","loading","componentDidMount","result","render","list","allURL","map","logoList","handleChnage","uploadLogo"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport uniqueId from \"lodash/uniqueId\";\nimport downloadS3 from \"./s3config.js\";\nimport S3FileUpload from \"react-s3\";\nimport { uploadFile } from \"react-s3\";\n\n// s3.getSignedUrl('getObject', params, function (err, url) {\n//     console.log('Your generated pre-signed URL is', url);\n// });\nvar AWS = require(\"aws-sdk\");\n// var keys = [\"194/194-logo-black.png\", \"194/kitty.jpg\"];\n// var list = [];\nAWS.config.update({\n    accessKeyId: \"AKIAXKCRRSD3GJHJE65C\",\n    secretAccessKey: \"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\",\n    region: \"us-west-2\"\n});\nconst s3 = new AWS.S3();\n// var urlparams = { Bucket: \"max-client-logos\", Key: keys[0] };\n// s3.getSignedUrl(\"getObject\", urlparams, function(err, url) {\n//     list.push(url);\n//     console.log(\"Your generated pre-signed URL is\", url);\n// });\n// urlparams = { Bucket: \"max-client-logos\", Key: keys[1] };\n// var hapi = s3.getSignedUrl(\"getObject\", urlparams);\n// list.push(hapi);\n//\n// function createAllUrl(allkey) {\n//     let allURL = [];\n//     const length = allkey.length;\n//     console.log(length);\n//     for (let i = 0; i < length; i++) {\n//         console.log(\"im a dog\");\n//         let params = { Bucket: \"max-client-logos\", Key: allkey[i] };\n//         let url = s3.getSignedUrl(\"getObject\", params);\n//         allURL.push(url);\n//     }\n//     console.log(allURL);\n//     return allURL;\n// }\n// createAllUrl(keys);\nasync function getPresignedUploadUrl(bucket, key) {\n    const url = await s3\n        .getSignedUrl(\"putObject\", {\n            Bucket: bucket,\n            Key: key,\n            ContentType: \"image/*\",\n            Expires: 300\n        })\n        .promise();\n    return url;\n}\n\nclass Logo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            choice: \"\",\n            options: [],\n            loading: true //Need to somehow set up the initial state so that the user can see the current stage of the logo\n        };\n        // this.getKeys = this.getKeys.bind(this);\n    }\n\n    handleChange = option => {\n        const value = option.target.value;\n        this.setState({ choice: value });\n    };\n\n    // createAllUrl = allkey => {\n    //     let allURL = [];\n    //     const length = allkey.length;\n    //     for (let i = 0; i < length; i++) {\n    //         console.log(\"im a dog\");\n    //         let params = {\n    //             Bucket: this.props.bucketName,\n    //             key: allkey[\"index\" === i][\"Key\"]\n    //         };\n    //         let url = s3.getSignedUrl(\"getObject\", params);\n    //         allURL.push(url);\n    //         console.log(i, allURL);\n    //     }\n    //     return allURL;\n    // };\n    async componentDidMount() {\n        const result = await downloadS3(\n            this.props.prefix,\n            this.props.bucketName\n        );\n        // console.log(\"allkey\", result);\n        this.setState({ options: result, loading: false });\n    }\n\n    handleLogoUpload = () => {\n        const config = {\n            bucketName: this.props.bucketName,\n            dirName: this.props.prefix,\n            accessKeyId: \"AKIAXKCRRSD3GJHJE65C\",\n            secretAccessKey: \"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\",\n            region: \"us-west-2\"\n        };\n        S3FileUpload.uploadFile(file, config)\n            .then(data => console.log(data))\n            .catch(err => console.error(err));\n    };\n\n    render() {\n        if (this.state.loading) {\n            return null;\n        }\n        // var list = [];\n        // (async function() {\n        //     var allKeys = await downloadS3(\n        //         this.props.prefix,\n        //         this.props.bucketName\n        //     );\n        //     list = allKeys;\n        // })();\n\n        var list = this.state.options;\n        const allURL = list.map(key =>\n            s3.getSignedUrl(\"getObject\", {\n                Bucket: this.props.bucketName,\n                Key: key,\n                Expires: 300\n            })\n        );\n        // console.log(\"allURL\", allURL);\n        // const allURL = this.createAllUrl(allkey);\n        const logoList = allURL.map(url => (\n            <div key={uniqueId()} className=\"container col-md-12\">\n                <label className=\"radio-inline\">\n                    <input\n                        type=\"radio\"\n                        name=\"inlineRadioOptions\"\n                        value={url}\n                        onChange={this.handleChnage}\n                    />\n                    <img className=\"logoImage\" src={url} alt=\"\" />\n                </label>\n            </div>\n        ));\n        return (\n            <div id=\"logo\" className=\"logo\">\n                <h3>Logo</h3>\n                <span className=\"help-block\" id=\"helpBlock\">\n                    Choose page logo\n                </span>\n                <div className=\"logo-options\">{logoList}</div>\n                <br />\n                <form class=\"logo-upload form-group row\">\n                    <div class=\"col-sm-10 col-md-12\">\n                        <button\n                            name=\"button\"\n                            class=\"btn btn-primary\"\n                            type=\"submit\"\n                            onClick={this.uploadLogo}\n                        >\n                            Upload a new logo\n                        </button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Logo;\n"]},"metadata":{},"sourceType":"module"}