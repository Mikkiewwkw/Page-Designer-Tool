{"ast":null,"code":"var _jsxFileName = \"/Users/kaiweiwu/Documents/page_designer/client/src/Colors.js\";\nimport React from \"react\";\nimport reactCSS from \"reactcss\";\nimport { ChromePicker } from \"react-color\"; // function generator() {\n//     document.getElementById(\"cp1\").colorpicker();\n// }\n//\n// generator();\n\nclass ColorpickerComponent extends React.Component {\n  render() {\n    const _this$props = this.props,\n          value = _this$props.value,\n          className = _this$props.className,\n          title = _this$props.title,\n          onClick = _this$props.onClick,\n          onChange = _this$props.onChange,\n          onClose = _this$props.onClose,\n          displayColorPicker = _this$props.displayColorPicker,\n          addonColor = _this$props.addonColor;\n    const styles = reactCSS({\n      default: {\n        color: {\n          width: \"17px\",\n          height: \"17px\",\n          borderRadius: \"2px\",\n          background: addonColor\n        }\n      }\n    });\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, title), React.createElement(\"div\", {\n      className: \"input-group colorpicker-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control colorpicker-text\",\n      value: value,\n      name: title,\n      onClick: onClick,\n      onBlur: onClose,\n      onChange: onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"input-group-addon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"colorpicker-swatch\",\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styles.color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))), displayColorPicker ? React.createElement(\"div\", {\n      className: \"colorpicker-popover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"colorpicker-cover\",\n      onClick: onClose,\n      onBlur: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(ChromePicker, {\n      color: addonColor,\n      onChange: onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })) : null)));\n  }\n\n}\n\nclass Colors extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = name => {\n      return e => {\n        if (name === \"Background\") {\n          this.closeAll();\n          this.setState({\n            displayBackgroundColorPicker: !this.state.displayBackgroundColorPicker\n          });\n        } else if (name === \"Header\") {\n          this.closeAll();\n          this.setState({\n            displayHeaderColorPicker: !this.state.displayHeaderColorPicker\n          });\n        } else if (name === \"Selection Button\") {\n          this.closeAll();\n          this.setState({\n            displaySelectionColorPicker: !this.state.displaySelectionColorPicker\n          });\n        }\n      };\n    };\n\n    this.closeAll = () => {\n      this.setState({\n        displayBackgroundColorPicker: false\n      });\n      this.setState({\n        displayHeaderColorPicker: false\n      });\n      this.setState({\n        displaySelectionColorPicker: false\n      });\n    };\n\n    this.handleClose = name => {\n      return e => {\n        if (name === \"Background\") {\n          this.setState({\n            displayBackgroundColorPicker: false\n          });\n        } else if (name === \"Header\") {\n          this.setState({\n            displayHeaderColorPicker: false\n          });\n        } else if (name === \"Selection Button\") {\n          this.setState({\n            displaySelectionColorPicker: false\n          });\n        }\n      };\n    };\n\n    this.handleBackgroundChange = color => {\n      this.setState({\n        Background: color.hex // Background_colorText: color.hex\n\n      });\n    };\n\n    this.handleHeaderChange = color => {\n      this.setState({\n        Header: color.hex // Header_colorText: color.hex\n\n      });\n    };\n\n    this.handleSelectionChange = color => {\n      this.setState({\n        SelectionButton: color.hex // Selection_colorText: color.hex\n\n      });\n    };\n\n    this.state = {\n      displayBackgroundColorPicker: false,\n      Background: \"#00aabb\",\n      // Background_colorText: \"#00aabb\",\n      displayHeaderColorPicker: false,\n      Header: \"#00aabb\",\n      // Header_colorText: \"#00aabb\",\n      displaySelectionColorPicker: false,\n      SelectionButton: \"#00aabb\" // Selection_colorText: \"#00aabb\"\n\n    };\n  }\n\n  // if (event.target.name === \"Background\") {\n  //     this.setState({ Background: color.hex });\n  // } else if (event.target.name === \"Header\") {\n  //     this.setState({ Header: color.hex });\n  // } else if (event.target.name === \"Selection Button\") {\n  //     this.setState({ SelectionButton: color.hex });\n  // } else {\n  //     //do nothing\n  // }\n  render() {\n    return React.createElement(\"div\", {\n      id: \"colors\",\n      className: \"colors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Colors\"), React.createElement(\"span\", {\n      className: \"help-block\",\n      id: \"helpBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Change the color of the page\"), React.createElement(ColorpickerComponent, {\n      className: \"background-color\",\n      value: this.state.Background,\n      title: \"Background\",\n      onChange: this.handleBackgroundChange,\n      onClick: this.handleClick(\"Background\"),\n      displayColorPicker: this.state.displayBackgroundColorPicker,\n      onClose: this.handleClose(\"Background\"),\n      addonColor: this.state.Background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(ColorpickerComponent, {\n      className: \"header-color\",\n      value: this.state.Header,\n      title: \"Header\",\n      onChange: this.handleHeaderChange,\n      onClick: this.handleClick(\"Header\"),\n      displayColorPicker: this.state.displayHeaderColorPicker,\n      onClose: this.handleClose(\"Header\"),\n      addonColor: this.state.Header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(ColorpickerComponent, {\n      className: \"selection-button-color\",\n      value: this.state.SelectionButton,\n      title: \"Selection Button\",\n      onChange: this.handleSelectionChange,\n      onClick: this.handleClick(\"Selection Button\"),\n      displayColorPicker: this.state.displaySelectionColorPicker,\n      onClose: this.handleClose(\"Selection Button\"),\n      addonColor: this.state.SelectionButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Colors;","map":{"version":3,"sources":["/Users/kaiweiwu/Documents/page_designer/client/src/Colors.js"],"names":["React","reactCSS","ChromePicker","ColorpickerComponent","Component","render","props","value","className","title","onClick","onChange","onClose","displayColorPicker","addonColor","styles","default","color","width","height","borderRadius","background","Colors","constructor","handleClick","name","e","closeAll","setState","displayBackgroundColorPicker","state","displayHeaderColorPicker","displaySelectionColorPicker","handleClose","handleBackgroundChange","Background","hex","handleHeaderChange","Header","handleSelectionChange","SelectionButton"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport reactCSS from \"reactcss\";\nimport { ChromePicker } from \"react-color\";\n\n// function generator() {\n//     document.getElementById(\"cp1\").colorpicker();\n// }\n//\n// generator();\n\nclass ColorpickerComponent extends React.Component {\n    render() {\n        const {\n            value,\n            className,\n            title,\n            onClick,\n            onChange,\n            onClose,\n            displayColorPicker,\n            addonColor\n        } = this.props;\n\n        const styles = reactCSS({\n            default: {\n                color: {\n                    width: \"17px\",\n                    height: \"17px\",\n                    borderRadius: \"2px\",\n                    background: addonColor\n                }\n            }\n        });\n\n        return (\n            <div className={className}>\n                <h5>{title}</h5>\n                <div className=\"input-group colorpicker-container\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control colorpicker-text\"\n                        value={value}\n                        name={title}\n                        onClick={onClick}\n                        onBlur={onClose}\n                        onChange={onChange}\n                    />\n                    <span className=\"input-group-addon\">\n                        <i>\n                            <div\n                                className=\"colorpicker-swatch\"\n                                onClick={onClick}\n                            >\n                                <div style={styles.color} />\n                            </div>\n                        </i>\n                        {displayColorPicker ? (\n                            <div className=\"colorpicker-popover\">\n                                <div\n                                    className=\"colorpicker-cover\"\n                                    onClick={onClose}\n                                    onBlur={onClose}\n                                />\n                                <ChromePicker\n                                    color={addonColor}\n                                    onChange={onChange}\n                                />\n                            </div>\n                        ) : null}\n                    </span>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Colors extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayBackgroundColorPicker: false,\n            Background: \"#00aabb\",\n            // Background_colorText: \"#00aabb\",\n            displayHeaderColorPicker: false,\n            Header: \"#00aabb\",\n            // Header_colorText: \"#00aabb\",\n            displaySelectionColorPicker: false,\n            SelectionButton: \"#00aabb\"\n            // Selection_colorText: \"#00aabb\"\n        };\n    }\n\n    handleClick = name => {\n        return e => {\n            if (name === \"Background\") {\n                this.closeAll();\n                this.setState({\n                    displayBackgroundColorPicker: !this.state\n                        .displayBackgroundColorPicker\n                });\n            } else if (name === \"Header\") {\n                this.closeAll();\n                this.setState({\n                    displayHeaderColorPicker: !this.state\n                        .displayHeaderColorPicker\n                });\n            } else if (name === \"Selection Button\") {\n                this.closeAll();\n                this.setState({\n                    displaySelectionColorPicker: !this.state\n                        .displaySelectionColorPicker\n                });\n            }\n        };\n    };\n\n    closeAll = () => {\n        this.setState({\n            displayBackgroundColorPicker: false\n        });\n        this.setState({\n            displayHeaderColorPicker: false\n        });\n        this.setState({\n            displaySelectionColorPicker: false\n        });\n    };\n\n    handleClose = name => {\n        return e => {\n            if (name === \"Background\") {\n                this.setState({\n                    displayBackgroundColorPicker: false\n                });\n            } else if (name === \"Header\") {\n                this.setState({\n                    displayHeaderColorPicker: false\n                });\n            } else if (name === \"Selection Button\") {\n                this.setState({\n                    displaySelectionColorPicker: false\n                });\n            }\n        };\n    };\n    //Can also use handleChange but that will change the state everytime we call on drag events\n    handleBackgroundChange = color => {\n        this.setState({\n            Background: color.hex\n            // Background_colorText: color.hex\n        });\n    };\n\n    handleHeaderChange = color => {\n        this.setState({\n            Header: color.hex\n            // Header_colorText: color.hex\n        });\n    };\n\n    handleSelectionChange = color => {\n        this.setState({\n            SelectionButton: color.hex\n            // Selection_colorText: color.hex\n        });\n    };\n    // if (event.target.name === \"Background\") {\n    //     this.setState({ Background: color.hex });\n    // } else if (event.target.name === \"Header\") {\n    //     this.setState({ Header: color.hex });\n    // } else if (event.target.name === \"Selection Button\") {\n    //     this.setState({ SelectionButton: color.hex });\n    // } else {\n    //     //do nothing\n    // }\n\n    render() {\n        return (\n            <div id=\"colors\" className=\"colors\">\n                <h3>Colors</h3>\n                <span className=\"help-block\" id=\"helpBlock\">\n                    Change the color of the page\n                </span>\n                <ColorpickerComponent\n                    className=\"background-color\"\n                    value={this.state.Background}\n                    title=\"Background\"\n                    onChange={this.handleBackgroundChange}\n                    onClick={this.handleClick(\"Background\")}\n                    displayColorPicker={this.state.displayBackgroundColorPicker}\n                    onClose={this.handleClose(\"Background\")}\n                    addonColor={this.state.Background}\n                />\n                <ColorpickerComponent\n                    className=\"header-color\"\n                    value={this.state.Header}\n                    title=\"Header\"\n                    onChange={this.handleHeaderChange}\n                    onClick={this.handleClick(\"Header\")}\n                    displayColorPicker={this.state.displayHeaderColorPicker}\n                    onClose={this.handleClose(\"Header\")}\n                    addonColor={this.state.Header}\n                />\n                <ColorpickerComponent\n                    className=\"selection-button-color\"\n                    value={this.state.SelectionButton}\n                    title=\"Selection Button\"\n                    onChange={this.handleSelectionChange}\n                    onClick={this.handleClick(\"Selection Button\")}\n                    displayColorPicker={this.state.displaySelectionColorPicker}\n                    onClose={this.handleClose(\"Selection Button\")}\n                    addonColor={this.state.SelectionButton}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Colors;\n"]},"metadata":{},"sourceType":"module"}