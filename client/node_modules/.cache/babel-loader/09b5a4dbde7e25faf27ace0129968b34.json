{"ast":null,"code":"import _objectSpread from \"/Users/kaiweiwu/Documents/page_designer/page-designer/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/kaiweiwu/Documents/page_designer/page-designer/src/FundSelection.js\";\nimport React from \"react\"; // import Ordering from \"./Ordering\";\n\nimport Sortable from 'react-sortablejs'; // import Sortable from 'sortablejs';\n\nclass FundSelection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onAddingOption = option => {\n      const isChecked = option.target.checked;\n      const value = option.target.value;\n      this.setState(state => ({\n        optionList: state.optionList.map(option => option.name === value ? _objectSpread({}, option, {\n          isChecked: isChecked\n        }) : option)\n      }));\n\n      if (isChecked) {\n        this.setState(state => ({\n          optionsChecked: state.optionsChecked.push({\n            value\n          })\n        }));\n      } else {\n        const newoptionsChecked = this.state.optionsChecked.filter(option => option !== value);\n        this.setState({\n          optionsChecked: newoptionsChecked\n        });\n      }\n\n      this.setState(state => ({\n        optionsChecked: state.optionsChecked.push({\n          value\n        })\n      })); // this.setState(prevState => ({ optionList: prevState.optionList.map(option => option.name === value ? { ...option, isChecked: isChecked } : option) }));\n      //\n      // if (isChecked)\n      //   this.setState(prevState => ({optionsChecked: [...prevState.optionsChecked, value] }));\n      // else {\n      //   const newoptionsChecked = this.state.optionsChecked.filter(option => option !== value)\n      //   this.setState({ optionsChecked: newoptionsChecked });\n      // }\n    };\n\n    this.state = {\n      optionList: [{\n        name: \"Option 1\",\n        isChecked: false\n      }, {\n        name: \"Option 2\",\n        isChecked: false\n      }, {\n        name: \"Option 3\",\n        isChecked: false\n      }],\n      optionsChecked: []\n    };\n  }\n\n  render() {\n    const optionList = this.state.optionList;\n    const option_list = optionList.map((option, i) => React.createElement(\"label\", {\n      key: i + 1,\n      \"data-id\": i + 1,\n      className: \"checkbox-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      value: option.name,\n      checked: this.state.optionList[i].isChecked,\n      onChange: this.onAddingOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), \"Option \", i + 1));\n    const orderlist = this.state.optionsChecked;\n    const order_list = orderlist.map((option, i) => React.createElement(\"li\", {\n      key: i + 1,\n      \"data-id\": i + 1,\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.optionsChecked[i]) // <div key={i+1} classNameName=\"list-group-item\" hidden={this.state.optionsChecked}>Option {i+1}</div>\n    );\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"apperance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Apperance\"), React.createElement(\"span\", {\n      className: \"help-block\",\n      id: \"helpBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Choose which funds are visible on the page\"), React.createElement(\"div\", {\n      className: \"multi-selection-fund\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, option_list), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Ordering\"), React.createElement(\"span\", {\n      class: \"help-block\",\n      id: \"helpBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Choose which order the funds are displayed on the page\"), React.createElement(\"div\", {\n      id: \"simpleList\",\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Sortable, {\n      options: {\n        animation: 150\n      },\n      className: \"block-list\",\n      tag: \"ul\",\n      onChange: options => {\n        this.setState({\n          optionsChecked: options\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, order_list)))));\n  }\n\n}\n\nexport default FundSelection;","map":{"version":3,"sources":["/Users/kaiweiwu/Documents/page_designer/page-designer/src/FundSelection.js"],"names":["React","Sortable","FundSelection","Component","constructor","props","onAddingOption","option","isChecked","target","checked","value","setState","state","optionList","map","name","optionsChecked","push","newoptionsChecked","filter","render","option_list","i","orderlist","order_list","animation","options"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import Ordering from \"./Ordering\";\nimport Sortable from 'react-sortablejs';\n// import Sortable from 'sortablejs';\n\nclass FundSelection extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      optionList: [{ name: \"Option 1\", isChecked: false }, { name: \"Option 2\", isChecked: false }, { name: \"Option 3\", isChecked: false }],\n      optionsChecked: []\n    }\n  }\n\n  onAddingOption = (option) => {\n    const isChecked = option.target.checked;\n    const value = option.target.value;\n\n    this.setState(state => ({ optionList: state.optionList.map(option => option.name === value ? { ...option, isChecked: isChecked } : option) }));\n\n    if(isChecked){\n      this.setState(state => ({\n        optionsChecked:state.optionsChecked.push({value})\n      }));\n    }\n    else{\n      const newoptionsChecked = this.state.optionsChecked.filter(option => option !== value);\n      this.setState({ optionsChecked: newoptionsChecked });\n    }\n\n    this.setState(state => ({\n      optionsChecked:state.optionsChecked.push({value})\n    }));\n\n\n    // this.setState(prevState => ({ optionList: prevState.optionList.map(option => option.name === value ? { ...option, isChecked: isChecked } : option) }));\n    //\n    // if (isChecked)\n    //   this.setState(prevState => ({optionsChecked: [...prevState.optionsChecked, value] }));\n    // else {\n    //   const newoptionsChecked = this.state.optionsChecked.filter(option => option !== value)\n    //   this.setState({ optionsChecked: newoptionsChecked });\n    // }\n  };\n\n\n\n  render() {\n    const optionList = this.state.optionList;\n    const option_list = optionList.map((option, i) =>\n      <label key={i+1} data-id={i+1} className=\"checkbox-inline\">\n        <input type=\"checkbox\" value={option.name} checked={this.state.optionList[i].isChecked} onChange={this.onAddingOption} />Option {i+1}\n      </label>\n    );\n    const orderlist = this.state.optionsChecked;\n    const order_list = orderlist.map((option, i) =>\n    <li key={i+1} data-id={i+1} className=\"list-group-item\">\n      {this.state.optionsChecked[i]}\n    </li>\n      // <div key={i+1} classNameName=\"list-group-item\" hidden={this.state.optionsChecked}>Option {i+1}</div>\n      );\n\n    return (\n      <div>\n        <div className=\"apperance\">\n          <h4>Apperance</h4>\n          <span className=\"help-block\" id=\"helpBlock\">Choose which funds are visible on the page</span>\n          <div className=\"multi-selection-fund\">\n            {option_list}\n          </div>\n          <div>\n            <h4>Ordering</h4>\n            <span class=\"help-block\" id=\"helpBlock\">Choose which order the funds are displayed on the page</span>\n            <div id=\"simpleList\" className=\"list-group\">\n              <Sortable\n                options={{animation:150}}\n                className=\"block-list\"\n                tag=\"ul\"\n                onChange={(options) => {\n                      this.setState({ optionsChecked: options });\n                  }}\n              >\n                {order_list}\n              </Sortable>\n          </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default FundSelection;\n"]},"metadata":{},"sourceType":"module"}