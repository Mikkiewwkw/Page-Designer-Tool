{"ast":null,"code":"var _jsxFileName = \"/Users/kaiweiwu/Documents/page_designer/page-designer/src/FundSelection.js\";\n// import React from \"react\";\n// // import Ordering from \"./Ordering\";\n// import Sortable from 'react-sortablejs';\n// import 'string';\n// import Sortable from 'sortablejs';\n// class FundSelection extends React.Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       optionList: [{ name: \"apples\", isChecked: false }, { name: \"Banana\", isChecked: false }, { name: \"orange\", isChecked: false }],\n//       optionsChecked: []\n//     }\n//   }\n//\n//   onAddingOption = (option) => {\n//     const isChecked = option.target.checked;\n//     const value = option.target.value;\n//\n//     this.setState(prevState => ({ optionList: prevState.optionList.map(option => option.name === value ? { ...option, isChecked: isChecked } : option) }));\n//\n//     if (isChecked)\n//       this.setState(prevState => ({optionsChecked: [...prevState.optionsChecked, value] }));\n//     else {\n//       const newoptionsChecked = this.state.optionsChecked.filter(option => option !== value)\n//       this.setState({ optionsChecked: newoptionsChecked });\n//     }\n//   }\n//\n//\n//\n//   render() {\n//     const option_list = this.state.optionList.map((option, i) =>\n//       // const id = \"inlineCheckbox\" + i.toString();\n//       <label key={i+1} className=\"checkbox-inline\">\n//         <input type=\"checkbox\" value={option.name} checked={option.isChecked} onChange={this.onAddingOption} />{option.name}\n//       </label>\n//     );\n//     var order_list = this.state.optionsChecked.map((option, i) =>\n//     <li key={i+1} className=\"list-group-item\">\n//       {option}\n//     </li>\n//     );\n//\n//     return (\n//       <div>\n//         <div className=\"apperance\">\n//           <h4>Apperance</h4>\n//           <span className=\"help-block\" id=\"helpBlock\">Choose which funds are visible on the page</span>\n//           <div className=\"multi-selection-fund\">\n//             {option_list}\n//           </div>\n//           <br/>\n//           <div>\n//             <h4>Ordering</h4>\n//             <span className=\"help-block\" id=\"helpBlock\">Choose which order the funds are displayed on the page</span>\n//             <div id=\"simpleList\" className=\"list-group\">\n//               <Sortable\n//                 options={{animation:150}}\n//                 className=\"block-list\"\n//                 tag=\"ul\"\n//                 onChange={(options => {\n//                   this.setState({optionsChecked:options});\n//                 })}\n//               >\n//                 {order_list}\n//               </Sortable>\n//           </div>\n//           </div>\n//         </div>\n//       </div>\n//     )\n//   }\n// }\nimport uniqueId from 'lodash/uniqueId';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sortable from 'react-sortablejs';\n\nclass FundSelection extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: ['Apple', 'Banana', 'Cherry', 'Guava', 'Peach', 'Strawberry']\n    };\n  }\n\n  render() {\n    const items = this.state.items.map(val => React.createElement(\"li\", {\n      key: uniqueId(),\n      \"data-id\": val,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, val));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Sortable, {\n      tag: \"ul\" // Defaults to \"div\"\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, items));\n  }\n\n}\n\nexport default FundSelection;","map":{"version":3,"sources":["/Users/kaiweiwu/Documents/page_designer/page-designer/src/FundSelection.js"],"names":["uniqueId","React","ReactDOM","Sortable","FundSelection","Component","state","items","render","map","val"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,QAAP,MAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAAA;AAAA;AAAA,SACxCC,KADwC,GAChC;AACJC,MAAAA,KAAK,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,EAA8B,OAA9B,EAAuC,OAAvC,EAAgD,YAAhD;AADH,KADgC;AAAA;;AAKxCC,EAAAA,MAAM,GAAG;AACL,UAAMD,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBE,GAAjB,CAAqBC,GAAG,IAAK;AAAI,MAAA,GAAG,EAAEV,QAAQ,EAAjB;AAAqB,iBAASU,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCA,GAApC,CAA7B,CAAd;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,GAAG,EAAC,IADR,CACa;AADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGKH,KAHL,CADJ,CADJ;AASH;;AAjBuC;;AAoB5C,eAAeH,aAAf","sourcesContent":["// import React from \"react\";\n// // import Ordering from \"./Ordering\";\n// import Sortable from 'react-sortablejs';\n// import 'string';\n// import Sortable from 'sortablejs';\n\n// class FundSelection extends React.Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       optionList: [{ name: \"apples\", isChecked: false }, { name: \"Banana\", isChecked: false }, { name: \"orange\", isChecked: false }],\n//       optionsChecked: []\n//     }\n//   }\n//\n//   onAddingOption = (option) => {\n//     const isChecked = option.target.checked;\n//     const value = option.target.value;\n//\n//     this.setState(prevState => ({ optionList: prevState.optionList.map(option => option.name === value ? { ...option, isChecked: isChecked } : option) }));\n//\n//     if (isChecked)\n//       this.setState(prevState => ({optionsChecked: [...prevState.optionsChecked, value] }));\n//     else {\n//       const newoptionsChecked = this.state.optionsChecked.filter(option => option !== value)\n//       this.setState({ optionsChecked: newoptionsChecked });\n//     }\n//   }\n//\n//\n//\n//   render() {\n//     const option_list = this.state.optionList.map((option, i) =>\n//       // const id = \"inlineCheckbox\" + i.toString();\n//       <label key={i+1} className=\"checkbox-inline\">\n//         <input type=\"checkbox\" value={option.name} checked={option.isChecked} onChange={this.onAddingOption} />{option.name}\n//       </label>\n//     );\n//     var order_list = this.state.optionsChecked.map((option, i) =>\n//     <li key={i+1} className=\"list-group-item\">\n//       {option}\n//     </li>\n//     );\n//\n//     return (\n//       <div>\n//         <div className=\"apperance\">\n//           <h4>Apperance</h4>\n//           <span className=\"help-block\" id=\"helpBlock\">Choose which funds are visible on the page</span>\n//           <div className=\"multi-selection-fund\">\n//             {option_list}\n//           </div>\n//           <br/>\n//           <div>\n//             <h4>Ordering</h4>\n//             <span className=\"help-block\" id=\"helpBlock\">Choose which order the funds are displayed on the page</span>\n//             <div id=\"simpleList\" className=\"list-group\">\n//               <Sortable\n//                 options={{animation:150}}\n//                 className=\"block-list\"\n//                 tag=\"ul\"\n//                 onChange={(options => {\n//                   this.setState({optionsChecked:options});\n//                 })}\n//               >\n//                 {order_list}\n//               </Sortable>\n//           </div>\n//           </div>\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n\nimport uniqueId from 'lodash/uniqueId';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sortable from 'react-sortablejs';\n\nclass FundSelection extends React.Component {\n    state = {\n        items: ['Apple', 'Banana', 'Cherry', 'Guava', 'Peach', 'Strawberry']\n    };\n\n    render() {\n        const items = this.state.items.map(val => (<li key={uniqueId()} data-id={val}>{val}</li>));\n\n        return (\n            <div>\n                <Sortable\n                    tag=\"ul\" // Defaults to \"div\"\n                >\n                    {items}\n                </Sortable>\n            </div>\n        );\n    }\n}\n\nexport default FundSelection;\n"]},"metadata":{},"sourceType":"module"}