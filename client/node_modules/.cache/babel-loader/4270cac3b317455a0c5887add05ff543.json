{"ast":null,"code":"var _jsxFileName = \"/Users/kaiweiwu/Documents/page_designer/page-designer/src/test.js\";\nimport React from \"react\";\nimport { ChromePicker } from \"react-color\";\n\nclass ButtonExample extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      displayColorPicker: false\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        displayColorPicker: !this.state.displayColorPicker\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        displayColorPicker: false\n      });\n    };\n  }\n\n  render() {\n    const popover = {\n      position: \"absolute\",\n      zIndex: \"2\"\n    };\n    const cover = {\n      position: \"fixed\",\n      top: \"0px\",\n      right: \"0px\",\n      bottom: \"0px\",\n      left: \"0px\"\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Pick Color\"), this.state.displayColorPicker ? React.createElement(\"div\", {\n      style: popover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: cover,\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(ChromePicker, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })) : null);\n  }\n\n}\n\nexport default ButtonExample;","map":{"version":3,"sources":["/Users/kaiweiwu/Documents/page_designer/page-designer/src/test.js"],"names":["React","ChromePicker","ButtonExample","Component","state","displayColorPicker","handleClick","setState","handleClose","render","popover","position","zIndex","cover","top","right","bottom","left"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAEA,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AAAA;AAAA;AAAA,SACxCC,KADwC,GAChC;AACJC,MAAAA,kBAAkB,EAAE;AADhB,KADgC;;AAAA,SAKxCC,WALwC,GAK1B,MAAM;AAChB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,kBAAkB,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAlC,OAAd;AACH,KAPuC;;AAAA,SASxCG,WATwC,GAS1B,MAAM;AAChB,WAAKD,QAAL,CAAc;AAAEF,QAAAA,kBAAkB,EAAE;AAAtB,OAAd;AACH,KAXuC;AAAA;;AAaxCI,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG;AACZC,MAAAA,QAAQ,EAAE,UADE;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAAhB;AAIA,UAAMC,KAAK,GAAG;AACVF,MAAAA,QAAQ,EAAE,OADA;AAEVG,MAAAA,GAAG,EAAE,KAFK;AAGVC,MAAAA,KAAK,EAAE,KAHG;AAIVC,MAAAA,MAAM,EAAE,KAJE;AAKVC,MAAAA,IAAI,EAAE;AALI,KAAd;AAOA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,KAAKX,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEK,KAAKF,KAAL,CAAWC,kBAAX,GACG;AAAK,MAAA,KAAK,EAAEK,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAEG,KAAZ;AAAmB,MAAA,OAAO,EAAE,KAAKL,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADH,GAKG,IAPR,CADJ;AAWH;;AApCuC;;AAuC5C,eAAeN,aAAf","sourcesContent":["import React from \"react\";\nimport { ChromePicker } from \"react-color\";\n\nclass ButtonExample extends React.Component {\n    state = {\n        displayColorPicker: false\n    };\n\n    handleClick = () => {\n        this.setState({ displayColorPicker: !this.state.displayColorPicker });\n    };\n\n    handleClose = () => {\n        this.setState({ displayColorPicker: false });\n    };\n\n    render() {\n        const popover = {\n            position: \"absolute\",\n            zIndex: \"2\"\n        };\n        const cover = {\n            position: \"fixed\",\n            top: \"0px\",\n            right: \"0px\",\n            bottom: \"0px\",\n            left: \"0px\"\n        };\n        return (\n            <div>\n                <button onClick={this.handleClick}>Pick Color</button>\n                {this.state.displayColorPicker ? (\n                    <div style={popover}>\n                        <div style={cover} onClick={this.handleClose} />\n                        <ChromePicker />\n                    </div>\n                ) : null}\n            </div>\n        );\n    }\n}\n\nexport default ButtonExample;\n"]},"metadata":{},"sourceType":"module"}