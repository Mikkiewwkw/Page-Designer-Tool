{"ast":null,"code":"var _jsxFileName = \"/Users/kaiweiwu/Documents/page_designer/page-designer/src/Logo.js\";\nimport React from \"react\";\nimport uniqueId from \"lodash/uniqueId\";\nimport downloadS3 from \"./s3config.js\"; // s3.getSignedUrl('getObject', params, function (err, url) {\n//     console.log('Your generated pre-signed URL is', url);\n// });\n\nvar AWS = require(\"aws-sdk\"); // var keys = [\"194/194-logo-black.png\", \"194/kitty.jpg\"];\n// var list = [];\n\n\nAWS.config.update({\n  accessKeyId: \"AKIAXKCRRSD3GJHJE65C\",\n  secretAccessKey: \"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\",\n  region: \"us-west-2\"\n});\nconst s3 = new AWS.S3(); // var urlparams = { Bucket: \"max-client-logos\", Key: keys[0] };\n// s3.getSignedUrl(\"getObject\", urlparams, function(err, url) {\n//     list.push(url);\n//     console.log(\"Your generated pre-signed URL is\", url);\n// });\n// urlparams = { Bucket: \"max-client-logos\", Key: keys[1] };\n// var hapi = s3.getSignedUrl(\"getObject\", urlparams);\n// list.push(hapi);\n//\n// function createAllUrl(allkey) {\n//     let allURL = [];\n//     const length = allkey.length;\n//     console.log(length);\n//     for (let i = 0; i < length; i++) {\n//         console.log(\"im a dog\");\n//         let params = { Bucket: \"max-client-logos\", Key: allkey[i] };\n//         let url = s3.getSignedUrl(\"getObject\", params);\n//         allURL.push(url);\n//     }\n//     console.log(allURL);\n//     return allURL;\n// }\n// createAllUrl(keys);\n\nclass Logo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = option => {\n      const value = option.target.value;\n      this.setState({\n        choice: value\n      });\n    };\n\n    this.componentDidMount = () => {\n      downloadS3(this.props.prefix, this.props.bucketName).then(result => {\n        console.log(\"allkey\", result);\n        this.setState({\n          options: result\n        });\n      });\n    };\n\n    this.state = {\n      choice: \"\",\n      options: [] //Need to somehow set up the initial state so that the user can see the current stage of the logo\n\n    }; // this.getKeys = this.getKeys.bind(this);\n  }\n\n  render() {\n    // var list = [];\n    // (async function() {\n    //     var allKeys = await downloadS3(\n    //         this.props.prefix,\n    //         this.props.bucketName\n    //     );\n    //     list = allKeys;\n    // })();\n    console.log(this.state.options);\n    var list = []; // console.log(typeof list);\n    // console.log(list);\n    // var elements = Array.from(allkey);\n    // console.log(elements);\n    // allkey = elements;\n    // console.log(allkey);\n    // var elements = [...allkey];\n\n    const allURL = list.map(key => s3.getSignedUrl(\"getObject\", {\n      Bucket: this.props.bucketName,\n      Key: key\n    }));\n    console.log(\"allURL\", allURL); // const allURL = this.createAllUrl(allkey);\n\n    const logoList = allURL.map(url => React.createElement(\"label\", {\n      className: \"radio-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      key: uniqueId(),\n      type: \"radio\",\n      name: \"inlineRadioOptions\",\n      value: url,\n      onChange: this.handleChnage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: url,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }))));\n    return React.createElement(\"div\", {\n      id: \"logo\",\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Logo\"), React.createElement(\"span\", {\n      className: \"help-block\",\n      id: \"helpBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Choose page logo\"), React.createElement(\"div\", {\n      className: \"logo-options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, logoList), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"logo-upload form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      name: \"button\",\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Upload a new logo\"))));\n  }\n\n}\n\nexport default Logo;","map":{"version":3,"sources":["/Users/kaiweiwu/Documents/page_designer/page-designer/src/Logo.js"],"names":["React","uniqueId","downloadS3","AWS","require","config","update","accessKeyId","secretAccessKey","region","s3","S3","Logo","Component","constructor","props","handleChange","option","value","target","setState","choice","componentDidMount","prefix","bucketName","then","result","console","log","options","state","render","list","allURL","map","key","getSignedUrl","Bucket","Key","logoList","url","handleChnage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport uniqueId from \"lodash/uniqueId\";\nimport downloadS3 from \"./s3config.js\";\n\n// s3.getSignedUrl('getObject', params, function (err, url) {\n//     console.log('Your generated pre-signed URL is', url);\n// });\nvar AWS = require(\"aws-sdk\");\n// var keys = [\"194/194-logo-black.png\", \"194/kitty.jpg\"];\n// var list = [];\nAWS.config.update({\n    accessKeyId: \"AKIAXKCRRSD3GJHJE65C\",\n    secretAccessKey: \"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\",\n    region: \"us-west-2\"\n});\nconst s3 = new AWS.S3();\n// var urlparams = { Bucket: \"max-client-logos\", Key: keys[0] };\n// s3.getSignedUrl(\"getObject\", urlparams, function(err, url) {\n//     list.push(url);\n//     console.log(\"Your generated pre-signed URL is\", url);\n// });\n// urlparams = { Bucket: \"max-client-logos\", Key: keys[1] };\n// var hapi = s3.getSignedUrl(\"getObject\", urlparams);\n// list.push(hapi);\n//\n// function createAllUrl(allkey) {\n//     let allURL = [];\n//     const length = allkey.length;\n//     console.log(length);\n//     for (let i = 0; i < length; i++) {\n//         console.log(\"im a dog\");\n//         let params = { Bucket: \"max-client-logos\", Key: allkey[i] };\n//         let url = s3.getSignedUrl(\"getObject\", params);\n//         allURL.push(url);\n//     }\n//     console.log(allURL);\n//     return allURL;\n// }\n// createAllUrl(keys);\n\nclass Logo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            choice: \"\",\n            options: [] //Need to somehow set up the initial state so that the user can see the current stage of the logo\n        };\n        // this.getKeys = this.getKeys.bind(this);\n    }\n\n    handleChange = option => {\n        const value = option.target.value;\n        this.setState({ choice: value });\n    };\n\n    // createAllUrl = allkey => {\n    //     let allURL = [];\n    //     const length = allkey.length;\n    //     for (let i = 0; i < length; i++) {\n    //         console.log(\"im a dog\");\n    //         let params = {\n    //             Bucket: this.props.bucketName,\n    //             key: allkey[\"index\" === i][\"Key\"]\n    //         };\n    //         let url = s3.getSignedUrl(\"getObject\", params);\n    //         allURL.push(url);\n    //         console.log(i, allURL);\n    //     }\n    //     return allURL;\n    // };\n    componentDidMount = () => {\n        downloadS3(this.props.prefix, this.props.bucketName).then(result => {\n            console.log(\"allkey\", result);\n            this.setState({ options: result });\n        });\n    };\n\n    render() {\n        // var list = [];\n        // (async function() {\n        //     var allKeys = await downloadS3(\n        //         this.props.prefix,\n        //         this.props.bucketName\n        //     );\n        //     list = allKeys;\n        // })();\n\n        console.log(this.state.options);\n        var list = [];\n\n        // console.log(typeof list);\n        // console.log(list);\n        // var elements = Array.from(allkey);\n        // console.log(elements);\n        // allkey = elements;\n        // console.log(allkey);\n        // var elements = [...allkey];\n        const allURL = list.map(key =>\n            s3.getSignedUrl(\"getObject\", {\n                Bucket: this.props.bucketName,\n                Key: key\n            })\n        );\n        console.log(\"allURL\", allURL);\n        // const allURL = this.createAllUrl(allkey);\n        const logoList = allURL.map(url => (\n            <label className=\"radio-inline\">\n                <input\n                    key={uniqueId()}\n                    type=\"radio\"\n                    name=\"inlineRadioOptions\"\n                    value={url}\n                    onChange={this.handleChnage}\n                >\n                    <img src={url} alt=\"\" />\n                </input>\n            </label>\n        ));\n        return (\n            <div id=\"logo\" className=\"logo\">\n                <h3>Logo</h3>\n                <span className=\"help-block\" id=\"helpBlock\">\n                    Choose page logo\n                </span>\n                <div className=\"logo-options\">{logoList}</div>\n                <br />\n                <div className=\"logo-upload form-group row\">\n                    <div className=\"col-sm-10\">\n                        <button\n                            name=\"button\"\n                            className=\"btn btn-primary\"\n                            type=\"submit\"\n                        >\n                            Upload a new logo\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Logo;\n"]},"metadata":{},"sourceType":"module"}