{"ast":null,"code":"var _jsxFileName = \"/Users/kaiweiwu/Documents/page_designer/page-designer/src/Colors.js\";\nimport React from \"react\";\nimport uniqueId from \"lodash/uniqueId\";\nimport reactCSS from \"reactcss\";\nimport { ChromePicker } from \"react-color\"; // function generator() {\n//     document.getElementById(\"cp1\").colorpicker();\n// }\n//\n// generator();\n\nclass ColorpickerComponent extends React.Component {\n  render() {\n    const _this$props = this.props,\n          value = _this$props.value,\n          className = _this$props.className,\n          title = _this$props.title,\n          onClick = _this$props.onClick,\n          onChange = _this$props.onChange,\n          onClose = _this$props.onClose,\n          displayColorPicker = _this$props.displayColorPicker,\n          addonColor = _this$props.addonColor;\n    const styles = reactCSS({\n      default: {\n        color: {\n          width: \"17px\",\n          height: \"17px\",\n          borderRadius: \"2px\",\n          background: addonColor\n        }\n      }\n    });\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, title), React.createElement(\"div\", {\n      className: \"input-group colorpicker-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control colorpicker-text\",\n      value: value,\n      name: title,\n      onClick: onClick,\n      onChange: onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"input-group-addon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"colorpicker-swatch\",\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styles.color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))), displayColorPicker ? React.createElement(\"div\", {\n      className: \"colorpicker-popover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"colorpicker-cover\",\n      onClick: onClose,\n      onBlur: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(ChromePicker, {\n      color: addonColor,\n      onChange: onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })) : null)));\n  }\n\n}\n\nclass Colors extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = name => {\n      return e => {\n        if (name === \"Background\") {\n          this.setState({\n            displayBackgroundColorPicker: !this.state.displayBackgroundColorPicker\n          });\n        } else if (name === \"Header\") {\n          this.setState({\n            displayHeaderColorPicker: !this.state.displayHeaderColorPicker\n          });\n        } else if (name === \"Selection Button\") {\n          this.setState({\n            displaySelectionColorPicker: !this.state.displaySelectionColorPicker\n          });\n        }\n      };\n    };\n\n    this.handleClose = name => {\n      return e => {\n        if (name === \"Background\") {\n          this.setState({\n            displayBackgroundColorPicker: false\n          });\n        } else if (name === \"Header\") {\n          this.setState({\n            displayHeaderColorPicker: false\n          });\n        } else if (name === \"Selection Button\") {\n          this.setState({\n            displaySelectionColorPicker: false\n          });\n        }\n      };\n    };\n\n    this.handleBackgroundChange = color => {\n      this.setState({\n        Background: color.hex,\n        Background_colorText: color.hex\n      });\n    };\n\n    this.handleHeaderChange = color => {\n      this.setState({\n        Header: color.hex,\n        Header_colorText: color.hex\n      });\n    };\n\n    this.handleSelectionChange = color => {\n      this.setState({\n        SelectionButton: color.hex,\n        Selection_colorText: color.hex\n      });\n    };\n\n    this.state = {\n      displayBackgroundColorPicker: false,\n      Background: \"#00aabb\",\n      Background_colorText: \"#00aabb\",\n      displayHeaderColorPicker: false,\n      Header: \"#00aabb\",\n      Header_colorText: \"#00aabb\",\n      displaySelectionColorPicker: false,\n      SelectionButton: \"#00aabb\",\n      Selection_colorText: \"#00aabb\"\n    };\n  }\n\n  // if (event.target.name === \"Background\") {\n  //     this.setState({ Background: color.hex });\n  // } else if (event.target.name === \"Header\") {\n  //     this.setState({ Header: color.hex });\n  // } else if (event.target.name === \"Selection Button\") {\n  //     this.setState({ SelectionButton: color.hex });\n  // } else {\n  //     //do nothing\n  // }\n  render() {\n    return React.createElement(\"div\", {\n      id: \"colors\",\n      className: \"colors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Colors\"), React.createElement(\"span\", {\n      className: \"help-block\",\n      id: \"helpBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Change the color of the page\"), React.createElement(ColorpickerComponent, {\n      className: \"background-color\",\n      value: this.state.Background_colorText,\n      title: \"Background\",\n      onChange: this.handleBackgroundChange,\n      onClick: this.handleClick(\"Background\"),\n      displayColorPicker: this.state.displayBackgroundColorPicker,\n      onClose: this.handleClose(\"Background\"),\n      onBlur: this.handleClose(\"Background\"),\n      addonColor: this.state.Background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(ColorpickerComponent, {\n      className: \"header-color\",\n      value: this.state.Header_colorText,\n      title: \"Header\",\n      onChange: this.handleHeaderChange,\n      onClick: this.handleClick(\"Header\"),\n      displayColorPicker: this.state.displayHeaderColorPicker,\n      onClose: this.handleClose(\"Header\"),\n      onBlur: this.handleClose(\"Header\"),\n      addonColor: this.state.Header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(ColorpickerComponent, {\n      className: \"selection-button-color\",\n      value: this.state.Selection_colorText,\n      title: \"Selection Button\",\n      onChange: this.handleSelectionChange,\n      onClick: this.handleClick(\"Selection Button\"),\n      displayColorPicker: this.state.displaySelectionColorPicker,\n      onClose: this.handleClose(\"Selection Button\"),\n      onBlur: this.handleClose(\"Selection Button\"),\n      addonColor: this.state.SelectionButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Colors;","map":{"version":3,"sources":["/Users/kaiweiwu/Documents/page_designer/page-designer/src/Colors.js"],"names":["React","uniqueId","reactCSS","ChromePicker","ColorpickerComponent","Component","render","props","value","className","title","onClick","onChange","onClose","displayColorPicker","addonColor","styles","default","color","width","height","borderRadius","background","Colors","constructor","handleClick","name","e","setState","displayBackgroundColorPicker","state","displayHeaderColorPicker","displaySelectionColorPicker","handleClose","handleBackgroundChange","Background","hex","Background_colorText","handleHeaderChange","Header","Header_colorText","handleSelectionChange","SelectionButton","Selection_colorText"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport uniqueId from \"lodash/uniqueId\";\nimport reactCSS from \"reactcss\";\nimport { ChromePicker } from \"react-color\";\n\n// function generator() {\n//     document.getElementById(\"cp1\").colorpicker();\n// }\n//\n// generator();\n\nclass ColorpickerComponent extends React.Component {\n    render() {\n        const {\n            value,\n            className,\n            title,\n            onClick,\n            onChange,\n            onClose,\n            displayColorPicker,\n            addonColor\n        } = this.props;\n\n        const styles = reactCSS({\n            default: {\n                color: {\n                    width: \"17px\",\n                    height: \"17px\",\n                    borderRadius: \"2px\",\n                    background: addonColor\n                }\n            }\n        });\n\n        return (\n            <div className={className}>\n                <h5>{title}</h5>\n                <div className=\"input-group colorpicker-container\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control colorpicker-text\"\n                        value={value}\n                        name={title}\n                        onClick={onClick}\n                        onChange={onChange}\n                    />\n                    <span className=\"input-group-addon\">\n                        <i>\n                            <div\n                                className=\"colorpicker-swatch\"\n                                onClick={onClick}\n                            >\n                                <div style={styles.color} />\n                            </div>\n                        </i>\n                        {displayColorPicker ? (\n                            <div className=\"colorpicker-popover\">\n                                <div\n                                    className=\"colorpicker-cover\"\n                                    onClick={onClose}\n                                    onBlur={onClose}\n                                />\n                                <ChromePicker\n                                    color={addonColor}\n                                    onChange={onChange}\n                                />\n                            </div>\n                        ) : null}\n                    </span>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Colors extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayBackgroundColorPicker: false,\n            Background: \"#00aabb\",\n            Background_colorText: \"#00aabb\",\n            displayHeaderColorPicker: false,\n            Header: \"#00aabb\",\n            Header_colorText: \"#00aabb\",\n            displaySelectionColorPicker: false,\n            SelectionButton: \"#00aabb\",\n            Selection_colorText: \"#00aabb\"\n        };\n    }\n\n    handleClick = name => {\n        return e => {\n            if (name === \"Background\") {\n                this.setState({\n                    displayBackgroundColorPicker: !this.state\n                        .displayBackgroundColorPicker\n                });\n            } else if (name === \"Header\") {\n                this.setState({\n                    displayHeaderColorPicker: !this.state\n                        .displayHeaderColorPicker\n                });\n            } else if (name === \"Selection Button\") {\n                this.setState({\n                    displaySelectionColorPicker: !this.state\n                        .displaySelectionColorPicker\n                });\n            }\n        };\n    };\n\n    handleClose = name => {\n        return e => {\n            if (name === \"Background\") {\n                this.setState({\n                    displayBackgroundColorPicker: false\n                });\n            } else if (name === \"Header\") {\n                this.setState({\n                    displayHeaderColorPicker: false\n                });\n            } else if (name === \"Selection Button\") {\n                this.setState({\n                    displaySelectionColorPicker: false\n                });\n            }\n        };\n    };\n    //Can also use handleChange but that will change the state everytime we call on drag events\n    handleBackgroundChange = color => {\n        this.setState({\n            Background: color.hex,\n            Background_colorText: color.hex\n        });\n    };\n\n    handleHeaderChange = color => {\n        this.setState({\n            Header: color.hex,\n            Header_colorText: color.hex\n        });\n    };\n\n    handleSelectionChange = color => {\n        this.setState({\n            SelectionButton: color.hex,\n            Selection_colorText: color.hex\n        });\n    };\n    // if (event.target.name === \"Background\") {\n    //     this.setState({ Background: color.hex });\n    // } else if (event.target.name === \"Header\") {\n    //     this.setState({ Header: color.hex });\n    // } else if (event.target.name === \"Selection Button\") {\n    //     this.setState({ SelectionButton: color.hex });\n    // } else {\n    //     //do nothing\n    // }\n\n    render() {\n        return (\n            <div id=\"colors\" className=\"colors\">\n                <h4>Colors</h4>\n                <span className=\"help-block\" id=\"helpBlock\">\n                    Change the color of the page\n                </span>\n                <ColorpickerComponent\n                    className=\"background-color\"\n                    value={this.state.Background_colorText}\n                    title=\"Background\"\n                    onChange={this.handleBackgroundChange}\n                    onClick={this.handleClick(\"Background\")}\n                    displayColorPicker={this.state.displayBackgroundColorPicker}\n                    onClose={this.handleClose(\"Background\")}\n                    onBlur={this.handleClose(\"Background\")}\n                    addonColor={this.state.Background}\n                />\n                <ColorpickerComponent\n                    className=\"header-color\"\n                    value={this.state.Header_colorText}\n                    title=\"Header\"\n                    onChange={this.handleHeaderChange}\n                    onClick={this.handleClick(\"Header\")}\n                    displayColorPicker={this.state.displayHeaderColorPicker}\n                    onClose={this.handleClose(\"Header\")}\n                    onBlur={this.handleClose(\"Header\")}\n                    addonColor={this.state.Header}\n                />\n                <ColorpickerComponent\n                    className=\"selection-button-color\"\n                    value={this.state.Selection_colorText}\n                    title=\"Selection Button\"\n                    onChange={this.handleSelectionChange}\n                    onClick={this.handleClick(\"Selection Button\")}\n                    displayColorPicker={this.state.displaySelectionColorPicker}\n                    onClose={this.handleClose(\"Selection Button\")}\n                    onBlur={this.handleClose(\"Selection Button\")}\n                    addonColor={this.state.SelectionButton}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Colors;\n"]},"metadata":{},"sourceType":"module"}