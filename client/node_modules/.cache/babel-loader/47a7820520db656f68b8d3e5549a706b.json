{"ast":null,"code":"var _jsxFileName = \"/Users/kaiweiwu/Documents/page_designer/client/src/Colors.js\";\nimport React from \"react\";\nimport reactCSS from \"reactcss\";\nimport { ChromePicker } from \"react-color\";\n\nlet base64 = require(\"base-64\");\n\nlet url = \"https://test-api.mobileaxept.com/micro_service/page-properties?\";\nlet username = \"spencer.grimes@mobileaxept.com\";\nlet password = \"Temp654321\";\nlet headers = {\n  Authorization: \"Basic \" + base64.encode(username + \":\" + password),\n  \"Content-Type\": \"application/json\"\n};\nconst propertyArray = [\"style.button-color\", \"style.main-background-color\", \"style.top-nav-color\"];\nconst length = propertyArray.length;\nconst propertyLibrary = {\n  Background: \"main-background-color\",\n  Header: \"top-nav-color\",\n  SelectionButton: \"button-color\"\n};\n\nclass ColorpickerComponent extends React.Component {\n  render() {\n    const _this$props = this.props,\n          value = _this$props.value,\n          className = _this$props.className,\n          title = _this$props.title,\n          onClick = _this$props.onClick,\n          onColorChange = _this$props.onColorChange,\n          onTextboxChange = _this$props.onTextboxChange,\n          onClose = _this$props.onClose,\n          displayColorPicker = _this$props.displayColorPicker,\n          addonColor = _this$props.addonColor;\n    const styles = reactCSS({\n      default: {\n        color: {\n          width: \"17px\",\n          height: \"17px\",\n          borderRadius: \"2px\",\n          background: addonColor\n        }\n      }\n    });\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, title), React.createElement(\"div\", {\n      className: \"input-group colorpicker-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control colorpicker-text\",\n      value: value,\n      name: title,\n      onClick: onClick,\n      onChange: onTextboxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"input-group-addon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"colorpicker-swatch\",\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styles.color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))), displayColorPicker ? React.createElement(\"div\", {\n      className: \"colorpicker-popover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"colorpicker-cover\",\n      onClick: onClose,\n      onBlur: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(ChromePicker, {\n      color: addonColor,\n      onChange: onColorChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })) : null)));\n  }\n\n}\n\nclass Colors extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = name => {\n      return e => {\n        if (name === \"Background\") {\n          this.closeAll();\n          this.setState({\n            displayBackgroundColorPicker: !this.state.displayBackgroundColorPicker\n          });\n        } else if (name === \"Header\") {\n          this.closeAll();\n          this.setState({\n            displayHeaderColorPicker: !this.state.displayHeaderColorPicker\n          });\n        } else if (name === \"Selection Button\") {\n          this.closeAll();\n          this.setState({\n            displaySelectionColorPicker: !this.state.displaySelectionColorPicker\n          });\n        }\n      };\n    };\n\n    this.closeAll = () => {\n      this.setState({\n        displayBackgroundColorPicker: false\n      });\n      this.setState({\n        displayHeaderColorPicker: false\n      });\n      this.setState({\n        displaySelectionColorPicker: false\n      });\n    };\n\n    this.handleClose = name => {\n      return e => {\n        if (name === \"Background\") {\n          this.setState({\n            displayBackgroundColorPicker: false\n          });\n        } else if (name === \"Header\") {\n          this.setState({\n            displayHeaderColorPicker: false\n          });\n        } else if (name === \"Selection Button\") {\n          this.setState({\n            displaySelectionColorPicker: false\n          });\n        }\n      };\n    };\n\n    this.handleBackgroundChange = color => {\n      this.setState({\n        Background: color.hex // Background_colorText: color.hex\n\n      });\n    };\n\n    this.handleHeaderChange = color => {\n      this.setState({\n        Header: color.hex // Header_colorText: color.hex\n\n      });\n    };\n\n    this.handleSelectionChange = color => {\n      this.setState({\n        SelectionButton: color.hex // Selection_colorText: color.hex\n\n      });\n    };\n\n    this.handleTextboxChange = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n\n      if (name === \"Background\") {\n        this.setState({\n          Background: value\n        });\n      } else if (name === \"Header\") {\n        this.setState({\n          Header: value\n        });\n      } else if (name === \"Selection Button\") {\n        this.setState({\n          SelectionButton: value\n        });\n      }\n    };\n\n    this.state = {\n      error: null,\n      isLoading: false,\n      displayBackgroundColorPicker: false,\n      Background: \"\",\n      // Background_colorText: \"#00aabb\",\n      displayHeaderColorPicker: false,\n      Header: \"\",\n      // Header_colorText: \"#00aabb\",\n      displaySelectionColorPicker: false,\n      SelectionButton: \"\" // Selection_colorText: \"#00aabb\"\n\n    };\n  }\n\n  componentDidMount() {\n    const client_code = this.props.clientCode;\n    const pageId = this.props.pageId;\n    this.setState({\n      isLoading: true\n    });\n\n    for (let i = 0; i < length; i++) {\n      let newUrl = url + \"client_code=\" + client_code + \"&page_id=\" + pageId + \"&field=\" + propertyArray[i]; // console.log(newUrl);\n\n      fetch(newUrl, {\n        method: \"GET\",\n        headers: headers,\n        mode: \"cors\"\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(\"Something went wrong ...\");\n        }\n      }).then(data => {\n        console.log(data);\n\n        if (data.prop_key.includes(\"button-color\")) {\n          this.setState({\n            SelectionButton: data.value,\n            isLoading: false\n          });\n        } else if (data.prop_key.includes(\"top-nav-color\")) {\n          this.setState({\n            Header: data.value,\n            isLoading: false\n          });\n        } else if (data.prop_key.includes(\"main-background-color\")) {\n          this.setState({\n            Background: data.value,\n            isLoading: false\n          });\n        }\n      }).catch(error => this.setState({\n        error,\n        isLoading: false\n      }));\n    }\n  }\n\n  compnentDidUpdate(prevProps, prevState) {\n    const client_code = this.props.clientCode;\n    const pageId = this.props.pageId;\n    let new_value = null;\n    let field = null;\n\n    if (prevState.Background !== this.state.Background) {\n      console.log(\"Update $(this.state.Background)\");\n      new_value = this.state.Background;\n      field = propertyLibrary[\"Background\"];\n    } else if (prevState.Header !== this.state.Header) {\n      console.log(\"Update $(this.state.Header)\");\n      new_value = this.state.Header;\n      field = propertyLibrary[\"Header\"];\n    } else if (prevState.SelectionButton !== this.state.SelectionButton) {\n      console.log(\"Update $(this.state.Header)\");\n      new_value = this.state.SelectionButton;\n      field = propertyLibrary[\"SelectionButton\"];\n    }\n\n    let body = {\n      client_code: client_code,\n      page_id: pageId,\n      field: field,\n      new_value: new_value\n    };\n    fetch(url, {\n      method: \"POST\",\n      headers: headers,\n      mode: \"cors\",\n      body: JSON.stringify(body)\n    }).then(response => {\n      if (response.ok) {\n        console.log(response);\n        return response.json();\n      } else {\n        throw new Error(\"Something went wrong ...\");\n      }\n    }).then(data => {\n      console.log(data);\n    }).catch(error => console.log(error));\n  }\n\n  // if (event.target.name === \"Background\") {\n  //     this.setState({ Background: color.hex });\n  // } else if (event.target.name === \"Header\") {\n  //     this.setState({ Header: color.hex });\n  // } else if (event.target.name === \"Selection Button\") {\n  //     this.setState({ SelectionButton: color.hex });\n  // } else {\n  //     //do nothing\n  // }\n  render() {\n    if (this.state.error) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, this.state.error.message);\n    }\n\n    if (this.state.isLoading) {\n      return React.createElement(\"div\", {\n        className: \"loader\",\n        id: \"loader-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"Loading...\"));\n    }\n\n    return React.createElement(\"div\", {\n      id: \"colors\",\n      className: \"colors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Colors\"), React.createElement(\"span\", {\n      className: \"help-block\",\n      id: \"helpBlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"Change the color of the page\"), React.createElement(ColorpickerComponent, {\n      className: \"background-color\",\n      value: this.state.Background,\n      title: \"Background\",\n      onTextboxChange: this.handleTextboxChange,\n      onColorChange: this.handleBackgroundChange,\n      onClick: this.handleClick(\"Background\"),\n      displayColorPicker: this.state.displayBackgroundColorPicker,\n      onClose: this.handleClose(\"Background\"),\n      addonColor: this.state.Background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }), React.createElement(ColorpickerComponent, {\n      className: \"header-color\",\n      value: this.state.Header,\n      title: \"Header\",\n      onTextboxChange: this.handleTextboxChange,\n      onColorChange: this.handleHeaderChange,\n      onClick: this.handleClick(\"Header\"),\n      displayColorPicker: this.state.displayHeaderColorPicker,\n      onClose: this.handleClose(\"Header\"),\n      addonColor: this.state.Header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }), React.createElement(ColorpickerComponent, {\n      className: \"selection-button-color\",\n      value: this.state.SelectionButton,\n      title: \"Selection Button\",\n      onTextboxChange: this.handleTextboxChange,\n      onColorChange: this.handleSelectionChange,\n      onClick: this.handleClick(\"Selection Button\"),\n      displayColorPicker: this.state.displaySelectionColorPicker,\n      onClose: this.handleClose(\"Selection Button\"),\n      addonColor: this.state.SelectionButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Colors;","map":{"version":3,"sources":["/Users/kaiweiwu/Documents/page_designer/client/src/Colors.js"],"names":["React","reactCSS","ChromePicker","base64","require","url","username","password","headers","Authorization","encode","propertyArray","length","propertyLibrary","Background","Header","SelectionButton","ColorpickerComponent","Component","render","props","value","className","title","onClick","onColorChange","onTextboxChange","onClose","displayColorPicker","addonColor","styles","default","color","width","height","borderRadius","background","Colors","constructor","handleClick","name","e","closeAll","setState","displayBackgroundColorPicker","state","displayHeaderColorPicker","displaySelectionColorPicker","handleClose","handleBackgroundChange","hex","handleHeaderChange","handleSelectionChange","handleTextboxChange","event","target","error","isLoading","componentDidMount","client_code","clientCode","pageId","i","newUrl","fetch","method","mode","then","response","ok","json","Error","data","console","log","prop_key","includes","catch","compnentDidUpdate","prevProps","prevState","new_value","field","body","page_id","JSON","stringify","message"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport reactCSS from \"reactcss\";\nimport { ChromePicker } from \"react-color\";\n\nlet base64 = require(\"base-64\");\nlet url = \"https://test-api.mobileaxept.com/micro_service/page-properties?\";\nlet username = \"spencer.grimes@mobileaxept.com\";\nlet password = \"Temp654321\";\nlet headers = {\n    Authorization: \"Basic \" + base64.encode(username + \":\" + password),\n    \"Content-Type\": \"application/json\"\n};\nconst propertyArray = [\n    \"style.button-color\",\n    \"style.main-background-color\",\n    \"style.top-nav-color\"\n];\nconst length = propertyArray.length;\nconst propertyLibrary = {\n    Background: \"main-background-color\",\n    Header: \"top-nav-color\",\n    SelectionButton: \"button-color\"\n};\nclass ColorpickerComponent extends React.Component {\n    render() {\n        const {\n            value,\n            className,\n            title,\n            onClick,\n            onColorChange,\n            onTextboxChange,\n            onClose,\n            displayColorPicker,\n            addonColor\n        } = this.props;\n\n        const styles = reactCSS({\n            default: {\n                color: {\n                    width: \"17px\",\n                    height: \"17px\",\n                    borderRadius: \"2px\",\n                    background: addonColor\n                }\n            }\n        });\n\n        return (\n            <div className={className}>\n                <h5>{title}</h5>\n                <div className=\"input-group colorpicker-container\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control colorpicker-text\"\n                        value={value}\n                        name={title}\n                        onClick={onClick}\n                        onChange={onTextboxChange}\n                    />\n                    <span className=\"input-group-addon\">\n                        <i>\n                            <div\n                                className=\"colorpicker-swatch\"\n                                onClick={onClick}\n                            >\n                                <div style={styles.color} />\n                            </div>\n                        </i>\n                        {displayColorPicker ? (\n                            <div className=\"colorpicker-popover\">\n                                <div\n                                    className=\"colorpicker-cover\"\n                                    onClick={onClose}\n                                    onBlur={onClose}\n                                />\n                                <ChromePicker\n                                    color={addonColor}\n                                    onChange={onColorChange}\n                                />\n                            </div>\n                        ) : null}\n                    </span>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Colors extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoading: false,\n            displayBackgroundColorPicker: false,\n            Background: \"\",\n            // Background_colorText: \"#00aabb\",\n            displayHeaderColorPicker: false,\n            Header: \"\",\n            // Header_colorText: \"#00aabb\",\n            displaySelectionColorPicker: false,\n            SelectionButton: \"\"\n            // Selection_colorText: \"#00aabb\"\n        };\n    }\n\n    componentDidMount() {\n        const client_code = this.props.clientCode;\n        const pageId = this.props.pageId;\n        this.setState({ isLoading: true });\n        for (let i = 0; i < length; i++) {\n            let newUrl =\n                url +\n                \"client_code=\" +\n                client_code +\n                \"&page_id=\" +\n                pageId +\n                \"&field=\" +\n                propertyArray[i];\n\n            // console.log(newUrl);\n            fetch(newUrl, {\n                method: \"GET\",\n                headers: headers,\n                mode: \"cors\"\n            })\n                .then(response => {\n                    if (response.ok) {\n                        return response.json();\n                    } else {\n                        throw new Error(\"Something went wrong ...\");\n                    }\n                })\n                .then(data => {\n                    console.log(data);\n                    if (data.prop_key.includes(\"button-color\")) {\n                        this.setState({\n                            SelectionButton: data.value,\n                            isLoading: false\n                        });\n                    } else if (data.prop_key.includes(\"top-nav-color\")) {\n                        this.setState({ Header: data.value, isLoading: false });\n                    } else if (\n                        data.prop_key.includes(\"main-background-color\")\n                    ) {\n                        this.setState({\n                            Background: data.value,\n                            isLoading: false\n                        });\n                    }\n                })\n                .catch(error => this.setState({ error, isLoading: false }));\n        }\n    }\n\n    compnentDidUpdate(prevProps, prevState) {\n        const client_code = this.props.clientCode;\n        const pageId = this.props.pageId;\n        let new_value = null;\n        let field = null;\n        if (prevState.Background !== this.state.Background) {\n            console.log(`Update $(this.state.Background)`);\n            new_value = this.state.Background;\n            field = propertyLibrary[\"Background\"];\n        } else if (prevState.Header !== this.state.Header) {\n            console.log(`Update $(this.state.Header)`);\n            new_value = this.state.Header;\n            field = propertyLibrary[\"Header\"];\n        } else if (prevState.SelectionButton !== this.state.SelectionButton) {\n            console.log(`Update $(this.state.Header)`);\n            new_value = this.state.SelectionButton;\n            field = propertyLibrary[\"SelectionButton\"];\n        }\n        let body = {\n            client_code: client_code,\n            page_id: pageId,\n            field: field,\n            new_value: new_value\n        };\n\n        fetch(url, {\n            method: \"POST\",\n            headers: headers,\n            mode: \"cors\",\n            body: JSON.stringify(body)\n        })\n            .then(response => {\n                if (response.ok) {\n                    console.log(response);\n                    return response.json();\n                } else {\n                    throw new Error(\"Something went wrong ...\");\n                }\n            })\n            .then(data => {\n                console.log(data);\n            })\n            .catch(error => console.log(error));\n    }\n\n    handleClick = name => {\n        return e => {\n            if (name === \"Background\") {\n                this.closeAll();\n                this.setState({\n                    displayBackgroundColorPicker: !this.state\n                        .displayBackgroundColorPicker\n                });\n            } else if (name === \"Header\") {\n                this.closeAll();\n                this.setState({\n                    displayHeaderColorPicker: !this.state\n                        .displayHeaderColorPicker\n                });\n            } else if (name === \"Selection Button\") {\n                this.closeAll();\n                this.setState({\n                    displaySelectionColorPicker: !this.state\n                        .displaySelectionColorPicker\n                });\n            }\n        };\n    };\n\n    closeAll = () => {\n        this.setState({\n            displayBackgroundColorPicker: false\n        });\n        this.setState({\n            displayHeaderColorPicker: false\n        });\n        this.setState({\n            displaySelectionColorPicker: false\n        });\n    };\n\n    handleClose = name => {\n        return e => {\n            if (name === \"Background\") {\n                this.setState({\n                    displayBackgroundColorPicker: false\n                });\n            } else if (name === \"Header\") {\n                this.setState({\n                    displayHeaderColorPicker: false\n                });\n            } else if (name === \"Selection Button\") {\n                this.setState({\n                    displaySelectionColorPicker: false\n                });\n            }\n        };\n    };\n    //Can also use handleChange but that will change the state everytime we call on drag events\n    handleBackgroundChange = color => {\n        this.setState({\n            Background: color.hex\n            // Background_colorText: color.hex\n        });\n    };\n\n    handleHeaderChange = color => {\n        this.setState({\n            Header: color.hex\n            // Header_colorText: color.hex\n        });\n    };\n\n    handleSelectionChange = color => {\n        this.setState({\n            SelectionButton: color.hex\n            // Selection_colorText: color.hex\n        });\n    };\n\n    handleTextboxChange = event => {\n        const name = event.target.name;\n        const value = event.target.value;\n        if (name === \"Background\") {\n            this.setState({ Background: value });\n        } else if (name === \"Header\") {\n            this.setState({ Header: value });\n        } else if (name === \"Selection Button\") {\n            this.setState({ SelectionButton: value });\n        }\n    };\n    // if (event.target.name === \"Background\") {\n    //     this.setState({ Background: color.hex });\n    // } else if (event.target.name === \"Header\") {\n    //     this.setState({ Header: color.hex });\n    // } else if (event.target.name === \"Selection Button\") {\n    //     this.setState({ SelectionButton: color.hex });\n    // } else {\n    //     //do nothing\n    // }\n\n    render() {\n        if (this.state.error) {\n            return <p>{this.state.error.message}</p>;\n        }\n        if (this.state.isLoading) {\n            return (\n                <div className=\"loader\" id=\"loader-1\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            );\n        }\n        return (\n            <div id=\"colors\" className=\"colors\">\n                <h3>Colors</h3>\n                <span className=\"help-block\" id=\"helpBlock\">\n                    Change the color of the page\n                </span>\n                <ColorpickerComponent\n                    className=\"background-color\"\n                    value={this.state.Background}\n                    title=\"Background\"\n                    onTextboxChange={this.handleTextboxChange}\n                    onColorChange={this.handleBackgroundChange}\n                    onClick={this.handleClick(\"Background\")}\n                    displayColorPicker={this.state.displayBackgroundColorPicker}\n                    onClose={this.handleClose(\"Background\")}\n                    addonColor={this.state.Background}\n                />\n                <ColorpickerComponent\n                    className=\"header-color\"\n                    value={this.state.Header}\n                    title=\"Header\"\n                    onTextboxChange={this.handleTextboxChange}\n                    onColorChange={this.handleHeaderChange}\n                    onClick={this.handleClick(\"Header\")}\n                    displayColorPicker={this.state.displayHeaderColorPicker}\n                    onClose={this.handleClose(\"Header\")}\n                    addonColor={this.state.Header}\n                />\n                <ColorpickerComponent\n                    className=\"selection-button-color\"\n                    value={this.state.SelectionButton}\n                    title=\"Selection Button\"\n                    onTextboxChange={this.handleTextboxChange}\n                    onColorChange={this.handleSelectionChange}\n                    onClick={this.handleClick(\"Selection Button\")}\n                    displayColorPicker={this.state.displaySelectionColorPicker}\n                    onClose={this.handleClose(\"Selection Button\")}\n                    addonColor={this.state.SelectionButton}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Colors;\n"]},"metadata":{},"sourceType":"module"}